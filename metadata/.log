!SESSION 2021-09-07 16:27:14.542 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-07 16:27:39.785
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-07 16:27:39.786
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@24dc150c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1d2d4d7a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-07 16:27:47.519
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2021-09-07 16:48:51.724
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:166)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:163)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:253)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:222)
	at java.base/java.lang.Thread.run(Thread.java:831)
!SESSION 2021-09-07 16:48:54.375 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-07 16:49:04.623
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-07 16:49:04.623
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6b86826a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3c2dda7c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-07 16:49:09.157
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-07 17:44:20.076 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-07 17:44:48.027
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-07 17:44:48.027
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7507d96c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7210f559,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-07 17:44:52.425
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-07 18:37:20.802 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-07 18:37:44.285
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-07 18:37:44.285
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@32caae19,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@60e67c06,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-07 18:37:49.401
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-07 18:41:44.701 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-07 18:41:54.187
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-07 18:41:54.187
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@41404aa2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@b267745,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-07 18:41:58.903
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-07 18:57:44.245 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-07 18:57:48.537
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-07 18:57:48.537
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7507d96c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7210f559,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-07 18:57:53.001
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-07 19:08:48.843 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-07 19:08:57.014
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-07 19:08:57.014
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7be62956,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@30e143ff,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-07 19:09:01.503
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-08 19:38:20.476 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-08 19:38:32.856
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-08 19:38:32.856
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@410f53b2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@265287ec,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-08 19:38:38.798
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-08 20:08:50.384 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-08 20:08:56.620
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-08 20:08:56.620
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74b7497b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74f649a7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-08 20:09:00.887
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-13 18:48:51.613 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-13 18:49:11.999
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-13 18:49:11.999
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@651cedfb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@18d22ecf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-13 18:49:18.100
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-20 19:05:46.263 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-20 19:06:37.487
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-20 19:06:37.487
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7507d96c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7210f559,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-20 19:06:43.148
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-21 17:42:25.040 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-21 17:42:41.476
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-21 17:42:41.476
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49b9ba6a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7be62956,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-21 17:42:48.547
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-21 17:50:51.819 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-21 17:50:56.723
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-21 17:50:56.723
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@410f53b2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@265287ec,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-21 17:51:01.330
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-09-21 17:53:10.666 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-21 17:53:16.866
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-21 17:53:16.866
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@410f53b2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@265287ec,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-21 17:53:21.384
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.ui 4 10001 2021-09-21 18:50:24.595
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Java Model Status [BufferedInputStream.class [in java.io [in <module:java.base>]] does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.ClassFile.getBinaryTypeInfo(ClassFile.java:189)
	at org.eclipse.jdt.internal.core.ClassFile.buildStructure(ClassFile.java:78)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:327)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:313)
	at org.eclipse.jdt.internal.core.Openable.getBuffer(Openable.java:296)
	at org.eclipse.jdt.internal.core.AbstractClassFile.getBuffer(AbstractClassFile.java:245)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContentFromSource(JavadocContentAccess2.java:634)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:515)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2021-09-21 18:50:24.595
!MESSAGE BufferedInputStream.class [in java.io [in <module:java.base>]] does not exist
!SESSION 2021-09-30 23:09:39.077 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-09-30 23:09:56.606
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-09-30 23:09:56.606
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49b9ba6a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7be62956,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-09-30 23:10:04.093
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-01 16:24:10.539 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-01 16:27:19.170
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-01 16:27:19.170
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@41404aa2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@b267745,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-01 16:27:24.417
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-01 19:44:17.933 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-01 19:44:22.235
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-01 19:44:22.235
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7210f559,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49b9ba6a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-01 19:44:26.799
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-02 13:45:02.774 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-02 13:48:07.593
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-02 13:48:07.593
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49b9ba6a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7be62956,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-02 13:48:13.921
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 4 0 2021-10-02 14:07:56.296
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.ClassCastException: class org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroupCore cannot be cast to class org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup (org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroupCore is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @2a349a73; org.eclipse.jdt.internal.corext.fix.LinkedProposalPositionGroup is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @55821edf)
	at org.eclipse.jdt.internal.corext.fix.LinkedProposalModel$LinkedProposalPositionGroupIterator.next(LinkedProposalModel.java:47)
	at org.eclipse.jdt.internal.corext.fix.LinkedProposalModel$LinkedProposalPositionGroupIterator.next(LinkedProposalModel.java:1)
	at org.eclipse.jdt.internal.ui.viewsupport.LinkedProposalModelPresenter.enterLinkedMode(LinkedProposalModelPresenter.java:75)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.LinkedCorrectionProposal.performChange(LinkedCorrectionProposal.java:161)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.apply(CUCorrectionProposal.java:167)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.FixCorrectionProposal.apply(FixCorrectionProposal.java:181)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.apply(AbstractAnnotationHover.java:556)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.access$1(AbstractAnnotationHover.java:538)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl$4.widgetSelected(AbstractAnnotationHover.java:532)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendSelectionEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Link.wmNotifyChild(Link.java:713)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5814)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:1954)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5382)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4816)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4938)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(Native Method)
	at org.eclipse.swt.widgets.Link.callWindowProc(Link.java:161)
	at org.eclipse.swt.widgets.Widget.wmLButtonUp(Widget.java:1970)
	at org.eclipse.swt.widgets.Control.WM_LBUTTONUP(Control.java:5195)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4797)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4930)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
!SESSION 2021-10-02 22:30:49.830 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-02 22:31:05.738
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-02 22:31:05.738
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@b267745,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@31e22365,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-02 22:31:10.408
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-03 19:40:38.019 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-03 19:41:02.169
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-03 19:41:02.169
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@410f53b2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@265287ec,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-03 19:41:08.606
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-04 18:32:34.342 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-04 18:36:28.846
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-04 18:36:28.846
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7be62956,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@30e143ff,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-04 18:36:35.423
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-04 19:17:26.279 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-04 19:17:30.590
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-04 19:17:30.590
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6cb194f5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74b7497b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-04 19:17:34.554
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-05 22:37:53.276 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-05 22:43:14.484
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-05 22:43:14.484
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4ff9f715,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@118a4d5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-05 22:43:20.729
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-06 16:04:49.363 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-06 16:04:57.925
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-06 16:04:57.925
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@30e143ff,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@452ec287,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-06 16:05:07.668
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-06 16:43:17.817 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-06 16:43:39.147
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-06 16:43:39.147
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2986427e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-06 16:43:44.131
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-06 19:52:12.905 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-06 19:52:23.644
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-06 19:52:23.644
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@58b3eb1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6d7e2795,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-06 19:52:28.263
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-06 23:20:09.166 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-06 23:20:15.394
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-06 23:20:15.394
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5358c8fa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1a02ebe0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-06 23:20:19.824
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-16 20:36:41.086 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-16 20:38:02.076
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-16 20:38:02.076
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6d7e2795,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@78743dd8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-16 20:38:08.365
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-18 21:56:20.818 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-18 21:56:40.986
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-18 21:56:40.986
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@78743dd8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-18 21:56:47.699
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-20 21:42:49.891 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-20 21:43:29.041
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-20 21:43:29.041
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@56402642,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@620572db,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-20 21:43:36.028
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-10-20 21:47:25.150
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Pong {

	/** GLOBAL VARIABLES **/
	
	DrawingPanel panel = 
	
	
	public static void main (String[] args) {
		
		new Pong();
		
	}
	
	Pong() {
		
		// setup();
		// moveBall();
		// movePlayerPaddle();
		// opponentAI();
		// score();
		
	}
	
	public void setup() {
		
		
		
	}
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3189)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3661)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-10-20 21:47:25.151
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3189)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3661)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-10-20 21:47:25.151
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3189)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3661)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:541)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:201)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
!SESSION 2021-10-21 16:27:09.092 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-21 16:27:15.476
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-21 16:27:15.476
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@78743dd8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-21 16:27:22.693
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-21 17:55:50.280 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-21 17:56:02.551
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-21 17:56:02.551
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2986427e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-21 17:56:08.344
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-21 18:10:06.811 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-21 18:10:13.935
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-21 18:10:13.935
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5358c8fa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1a02ebe0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-21 18:10:18.354
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-21 19:49:23.529 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-21 19:49:28.750
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-21 19:49:28.750
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@78743dd8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-21 19:49:33.330
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-24 16:04:06.439 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-24 16:04:19.275
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-24 16:04:19.275
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@58b3eb1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6d7e2795,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-24 16:04:25.135
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-30 14:48:24.900 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-30 14:48:42.436
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-30 14:48:42.436
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2986427e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-30 14:48:49.298
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-30 17:42:33.024 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-30 17:42:38.110
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-30 17:42:38.110
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-30 17:42:43.116
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-30 19:29:15.175 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-30 19:29:26.708
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-30 19:29:26.708
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@58b3eb1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6d7e2795,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-30 19:29:31.232
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-30 22:10:23.296 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-30 22:12:02.709
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-30 22:12:02.709
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2986427e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-30 22:12:07.085
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-10-31 16:09:43.327 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-10-31 16:09:59.538
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-10-31 16:09:59.538
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-10-31 16:10:05.915
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-01 17:37:58.463 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-01 17:38:13.591
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-01 17:38:13.591
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@78743dd8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-01 17:38:20.462
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-02 17:06:45.670 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-02 17:07:07.192
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-02 17:07:07.192
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-02 17:07:13.944
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-02 20:56:48.453 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-02 20:56:54.148
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-02 20:56:54.148
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2986427e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-02 20:56:59.086
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-03 16:44:00.415 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-03 16:44:15.086
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-03 16:44:15.086
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-03 16:44:21.455
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-11-03 18:31:06.246
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class MyLoadingIcon implements ActionListener {

	int N = 5;
	int diameter = 18;
	double rotationRadius = (diameter/2)*5.5;
	double angle[] = new double[N];
	double xx[] = new double[N];
	double yy[] = new double[N];



	JFrame window;
	DrawingPanel panel;
	int panW = 600;
	int panH = panW;

	Color colours[] = new Color []{
			Color.decode("#ff6161"), //new color
			Color.decode("#ffb359"), //new color
			Color.decode("#fbff6a"), //new color
			Color.decode("#8bff73"), //new color
			Color.decode("#4fefff"), //new color
			Color.decode("#5494ff"), //new color
			Color.decode("#7b66ff"), //new color
			Color.decode("#ff93ff"), //new color
	};

	Color dotColour;

	/*
	Ellipse2D rect1;
	Ellipse2D rect2;
	Ellipse2D rect3;
	Ellipse2D rect4;
	Ellipse2D rect5;
	 */


	public static void main (String[] args) {
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				new MyLoadingIcon();
			}
		});
	}



	public void generateStuff() {
		//calculate angles


		for (int i = 0; i < N; i++) {
			angle[i] = 360 - (360/N *i);
			//System.out.println(angle[i]);
		}
		System.out.println(" ");
		//calculate xx and yy
		for (int i = 0; i < N; i++) {
			xx[i] = panW/2 + rotationRadius*Math.sin(Math.toRadians(angle[i])) - (diameter/2); //-(diameter/2) centres the system of dots on the screen
			//System.out.println(xx[i]);

			yy[i] = panH/2 - rotationRadius*Math.cos(Math.toRadians(angle[i])) - (diameter/2);
			//System.out.println(yy[i]);
		}

		dotColour = colours[(int)(Math.random()*colours.length)];

		/*
		rect1 = new Ellipse2D.Double(xx[0],yy[0],20,20);
		rect2 = new Ellipse2D.Double(xx[1],yy[1],20,20);
		rect3 = new Ellipse2D.Double(xx[2],yy[2],20,20);
		rect4 = new Ellipse2D.Double(xx[3],yy[3],20,20);
		rect5 = new Ellipse2D.Double(xx[4],yy[4],20,20);
		 */

	}


	MyLoadingIcon() {

		window = new JFrame("Timer Move");
		panel = new DrawingPanel();
		window.add(panel);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setResizable(false);

		//rect[0].setFrame(xx[0],yy[0],diameter,diameter);

		generateStuff();

		//timer
		Timer timer = new Timer (8, this);
		timer.start();


		window.pack();
		window.setVisible(true);

	}

	class DrawingPanel extends JPanel {

		DrawingPanel() {
			this.setPreferredSize(new Dimension(panW,panH));
			this.setBackground(Color.decode("#2E2E2E"));
		}


		public void paintComponent(Graphics g) {
			super.paintComponent(g);

			Graphics2D g2 = (Graphics2D) g;

			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); 


			//draw lines
			
			g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {	


					g2.drawLine((int)xx[i] + (diameter/2), (int)yy[i] + (diameter/2), (int)xx[j] + (diameter/2), (int)yy[j] + (diameter/2));

				}
			}
			

			//darw dot outlines
			//g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i]-2, yy[i]-2, diameter+4, diameter+4));

				//g2.setColor(Color.white);

			}


			//draw dots
			g2.setColor(dotColour);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i], yy[i], diameter, diameter));
				//g2.setColor(Color.white);

			}

			if (true) {
				//System.out.println(angle[0]);

				/*
				 * g2.drawLine (dot0 x position, dot0 y position, dot2
				 */

				//g2.drawLine((int)xx[0], (int)yy[0], (int)xx[0]+50, (int)yy[0] + 50);

				//angle of line
				// Math.atan( yy[2] - yy[0]/ (xx[2] - xx[0])

				//System.out.println(Math.toDegrees(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))));

				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0] + (diameter/2), 
						(int)yy[0] + (diameter/2), 
						(int) (xx[0] + (100*Math.cos(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))), 
						(int) (yy[0] + (100*Math.sin(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))));
				
				
				g2.setStroke(new BasicStroke(1));
				g2.drawLine((int)xx[0] + (diameter/2), 
						(int)yy[0] + (diameter/2), 
						(int) (xx[0] + (100*-Math.cos(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))), 
						(int) (yy[0] + (100*-Math.sin(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))));

				/*
				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0]+(diameter/2), (int)yy[0]+(diameter/2), (int)xx[2]+(diameter/2), (int)yy[2]+(diameter/2));
				 */
				
				if ((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))  > 0  (Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))) < 180) {
					System.out.println((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	);
				}

			}


			g2.setColor(Color.black);
			for (int i = 0; i < N; i++) {
				g2.drawString(""+(i+1), (int)xx[i]+7, (int)yy[i]+13);
			}


			//draw lasers

		}

	}


	@Override
	public void actionPerformed(ActionEvent e) {

		//increase angle
		for (int i = 0; i < N; i++) {
			angle[i]--;
		}

		//update dot positions

		//alternate function transformations
		for (int i = 0; i < N-1; i++) {


			if (i%2 == 0) {
				xx[i] -= 2*Math.cos(Math.toRadians(angle[i]));
				yy[i] -= Math.sin(Math.toRadians(angle[i]));
			}
			else {
				xx[i] -= Math.cos(Math.toRadians(angle[i]));
				yy[i] -= 2*Math.sin(Math.toRadians(angle[i]));
			}


		}

		//make last one normal (for cooler effect)
		xx[N-1] -= 2*Math.cos(Math.toRadians(angle[N-1]));
		yy[N-1] -= 2*Math.sin(Math.toRadians(angle[N-1]));


		//change colour every rotation
		Color temp;
		if (angle[0]%360 == 0) {

			temp = dotColour;

			while (temp.equals(dotColour)) {
				dotColour = colours[(int)(Math.random()*colours.length)];
			}

		}

		if (angle[0] == 0) {
			for (int i = 0; i < N; i++) {
				angle[i] = 360 - (360/N *i);
				//System.out.println(angle[i]);
			}
		}

		panel.repaint();

	}





}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-11-03 18:31:06.247
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-11-03 18:31:06.247
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-11-03 18:31:06.257
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class MyLoadingIcon implements ActionListener {

	int N = 5;
	int diameter = 18;
	double rotationRadius = (diameter/2)*5.5;
	double angle[] = new double[N];
	double xx[] = new double[N];
	double yy[] = new double[N];



	JFrame window;
	DrawingPanel panel;
	int panW = 600;
	int panH = panW;

	Color colours[] = new Color []{
			Color.decode("#ff6161"), //new color
			Color.decode("#ffb359"), //new color
			Color.decode("#fbff6a"), //new color
			Color.decode("#8bff73"), //new color
			Color.decode("#4fefff"), //new color
			Color.decode("#5494ff"), //new color
			Color.decode("#7b66ff"), //new color
			Color.decode("#ff93ff"), //new color
	};

	Color dotColour;

	/*
	Ellipse2D rect1;
	Ellipse2D rect2;
	Ellipse2D rect3;
	Ellipse2D rect4;
	Ellipse2D rect5;
	 */


	public static void main (String[] args) {
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				new MyLoadingIcon();
			}
		});
	}



	public void generateStuff() {
		//calculate angles


		for (int i = 0; i < N; i++) {
			angle[i] = 360 - (360/N *i);
			//System.out.println(angle[i]);
		}
		System.out.println(" ");
		//calculate xx and yy
		for (int i = 0; i < N; i++) {
			xx[i] = panW/2 + rotationRadius*Math.sin(Math.toRadians(angle[i])) - (diameter/2); //-(diameter/2) centres the system of dots on the screen
			//System.out.println(xx[i]);

			yy[i] = panH/2 - rotationRadius*Math.cos(Math.toRadians(angle[i])) - (diameter/2);
			//System.out.println(yy[i]);
		}

		dotColour = colours[(int)(Math.random()*colours.length)];

		/*
		rect1 = new Ellipse2D.Double(xx[0],yy[0],20,20);
		rect2 = new Ellipse2D.Double(xx[1],yy[1],20,20);
		rect3 = new Ellipse2D.Double(xx[2],yy[2],20,20);
		rect4 = new Ellipse2D.Double(xx[3],yy[3],20,20);
		rect5 = new Ellipse2D.Double(xx[4],yy[4],20,20);
		 */

	}


	MyLoadingIcon() {

		window = new JFrame("Timer Move");
		panel = new DrawingPanel();
		window.add(panel);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setResizable(false);

		//rect[0].setFrame(xx[0],yy[0],diameter,diameter);

		generateStuff();

		//timer
		Timer timer = new Timer (8, this);
		timer.start();


		window.pack();
		window.setVisible(true);

	}

	class DrawingPanel extends JPanel {

		DrawingPanel() {
			this.setPreferredSize(new Dimension(panW,panH));
			this.setBackground(Color.decode("#2E2E2E"));
		}


		public void paintComponent(Graphics g) {
			super.paintComponent(g);

			Graphics2D g2 = (Graphics2D) g;

			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); 


			//draw lines
			
			g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {	


					g2.drawLine((int)xx[i] + (diameter/2), (int)yy[i] + (diameter/2), (int)xx[j] + (diameter/2), (int)yy[j] + (diameter/2));

				}
			}
			

			//darw dot outlines
			//g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i]-2, yy[i]-2, diameter+4, diameter+4));

				//g2.setColor(Color.white);

			}


			//draw dots
			g2.setColor(dotColour);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i], yy[i], diameter, diameter));
				//g2.setColor(Color.white);

			}

			if (true) {
				//System.out.println(angle[0]);

				/*
				 * g2.drawLine (dot0 x position, dot0 y position, dot2
				 */

				//g2.drawLine((int)xx[0], (int)yy[0], (int)xx[0]+50, (int)yy[0] + 50);

				//angle of line
				// Math.atan( yy[2] - yy[0]/ (xx[2] - xx[0])

				//System.out.println(Math.toDegrees(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))));

				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0] + (diameter/2), 
						(int)yy[0] + (diameter/2), 
						(int) (xx[0] + (100*Math.cos(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))), 
						(int) (yy[0] + (100*Math.sin(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))));
				
				
				g2.setStroke(new BasicStroke(1));
				g2.drawLine((int)xx[0] + (diameter/2), 
						(int)yy[0] + (diameter/2), 
						(int) (xx[0] + (100*-Math.cos(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))), 
						(int) (yy[0] + (100*-Math.sin(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))));

				/*
				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0]+(diameter/2), (int)yy[0]+(diameter/2), (int)xx[2]+(diameter/2), (int)yy[2]+(diameter/2));
				 */
				
				if ((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))  > 0  (Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))) < 180) {
					System.out.println((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	);
				}

			}


			g2.setColor(Color.black);
			for (int i = 0; i < N; i++) {
				g2.drawString(""+(i+1), (int)xx[i]+7, (int)yy[i]+13);
			}


			//draw lasers

		}

	}


	@Override
	public void actionPerformed(ActionEvent e) {

		//increase angle
		for (int i = 0; i < N; i++) {
			angle[i]--;
		}

		//update dot positions

		//alternate function transformations
		for (int i = 0; i < N-1; i++) {


			if (i%2 == 0) {
				xx[i] -= 2*Math.cos(Math.toRadians(angle[i]));
				yy[i] -= Math.sin(Math.toRadians(angle[i]));
			}
			else {
				xx[i] -= Math.cos(Math.toRadians(angle[i]));
				yy[i] -= 2*Math.sin(Math.toRadians(angle[i]));
			}


		}

		//make last one normal (for cooler effect)
		xx[N-1] -= 2*Math.cos(Math.toRadians(angle[N-1]));
		yy[N-1] -= 2*Math.sin(Math.toRadians(angle[N-1]));


		//change colour every rotation
		Color temp;
		if (angle[0]%360 == 0) {

			temp = dotColour;

			while (temp.equals(dotColour)) {
				dotColour = colours[(int)(Math.random()*colours.length)];
			}

		}

		if (angle[0] == 0) {
			for (int i = 0; i < N; i++) {
				angle[i] = 360 - (360/N *i);
				//System.out.println(angle[i]);
			}
		}

		panel.repaint();

	}





}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-11-03 18:31:06.258
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-11-03 18:31:06.258
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-11-03 18:37:02.283
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class MyLoadingIcon implements ActionListener {

	int N = 5;
	int diameter = 18;
	double rotationRadius = (diameter/2)*5.5;
	double angle[] = new double[N];
	double xx[] = new double[N];
	double yy[] = new double[N];



	JFrame window;
	DrawingPanel panel;
	int panW = 600;
	int panH = panW;

	Color colours[] = new Color []{
			Color.decode("#ff6161"), //new color
			Color.decode("#ffb359"), //new color
			Color.decode("#fbff6a"), //new color
			Color.decode("#8bff73"), //new color
			Color.decode("#4fefff"), //new color
			Color.decode("#5494ff"), //new color
			Color.decode("#7b66ff"), //new color
			Color.decode("#ff93ff"), //new color
	};

	Color dotColour;

	/*
	Ellipse2D rect1;
	Ellipse2D rect2;
	Ellipse2D rect3;
	Ellipse2D rect4;
	Ellipse2D rect5;
	 */


	public static void main (String[] args) {
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				new MyLoadingIcon();
			}
		});
	}



	public void generateStuff() {
		//calculate angles


		for (int i = 0; i < N; i++) {
			angle[i] = 360 - (360/N *i);
			//System.out.println(angle[i]);
		}
		System.out.println(" ");
		//calculate xx and yy
		for (int i = 0; i < N; i++) {
			xx[i] = panW/2 + rotationRadius*Math.sin(Math.toRadians(angle[i])) - (diameter/2); //-(diameter/2) centres the system of dots on the screen
			//System.out.println(xx[i]);

			yy[i] = panH/2 - rotationRadius*Math.cos(Math.toRadians(angle[i])) - (diameter/2);
			//System.out.println(yy[i]);
		}

		dotColour = colours[(int)(Math.random()*colours.length)];

		/*
		rect1 = new Ellipse2D.Double(xx[0],yy[0],20,20);
		rect2 = new Ellipse2D.Double(xx[1],yy[1],20,20);
		rect3 = new Ellipse2D.Double(xx[2],yy[2],20,20);
		rect4 = new Ellipse2D.Double(xx[3],yy[3],20,20);
		rect5 = new Ellipse2D.Double(xx[4],yy[4],20,20);
		 */

	}


	MyLoadingIcon() {

		window = new JFrame("Timer Move");
		panel = new DrawingPanel();
		window.add(panel);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setResizable(false);

		//rect[0].setFrame(xx[0],yy[0],diameter,diameter);

		generateStuff();

		//timer
		Timer timer = new Timer (8, this);
		timer.start();


		window.pack();
		window.setVisible(true);

	}

	class DrawingPanel extends JPanel {

		DrawingPanel() {
			this.setPreferredSize(new Dimension(panW,panH));
			this.setBackground(Color.decode("#2E2E2E"));
		}


		public void paintComponent(Graphics g) {
			super.paintComponent(g);

			Graphics2D g2 = (Graphics2D) g;

			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); 


			//draw lines
			
			g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {	


					g2.drawLine((int)xx[i] + (diameter/2), (int)yy[i] + (diameter/2), (int)xx[j] + (diameter/2), (int)yy[j] + (diameter/2));

				}
			}
			

			//darw dot outlines
			//g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i]-2, yy[i]-2, diameter+4, diameter+4));

				//g2.setColor(Color.white);

			}


			//draw dots
			g2.setColor(dotColour);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i], yy[i], diameter, diameter));
				//g2.setColor(Color.white);

			}

			if (true) {
				//System.out.println(angle[0]);

				/*
				 * g2.drawLine (dot0 x position, dot0 y position, dot2
				 */

				//g2.drawLine((int)xx[0], (int)yy[0], (int)xx[0]+50, (int)yy[0] + 50);

				//angle of line
				// Math.atan( yy[2] - yy[0]/ (xx[2] - xx[0])

				//System.out.println(Math.toDegrees(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))));

				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0] + (diameter/2), 
						(int)yy[0] + (diameter/2), 
						(int) (xx[0] + (100*Math.cos(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))), 
						(int) (yy[0] + (100*Math.sin(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))));
				
				
				g2.setStroke(new BasicStroke(1));
				g2.drawLine((int)xx[0] + (diameter/2), 
						(int)yy[0] + (diameter/2), 
						(int) (xx[0] + (100*-Math.cos(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))), 
						(int) (yy[0] + (100*-Math.sin(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))));

				/*
				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0]+(diameter/2), (int)yy[0]+(diameter/2), (int)xx[2]+(diameter/2), (int)yy[2]+(diameter/2));
				 */
				
				if ((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))  < 270  (Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))) > 180) {
					System.out.println((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	);
				}
				
				

			}


			g2.setColor(Color.black);
			for (int i = 0; i < N; i++) {
				g2.drawString(""+(i+1), (int)xx[i]+7, (int)yy[i]+13);
			}


			//draw lasers

		}

	}


	@Override
	public void actionPerformed(ActionEvent e) {

		//increase angle
		for (int i = 0; i < N; i++) {
			angle[i]--;
		}

		//update dot positions

		//alternate function transformations
		for (int i = 0; i < N-1; i++) {


			if (i%2 == 0) {
				xx[i] -= 2*Math.cos(Math.toRadians(angle[i]));
				yy[i] -= Math.sin(Math.toRadians(angle[i]));
			}
			else {
				xx[i] -= Math.cos(Math.toRadians(angle[i]));
				yy[i] -= 2*Math.sin(Math.toRadians(angle[i]));
			}


		}

		//make last one normal (for cooler effect)
		xx[N-1] -= 2*Math.cos(Math.toRadians(angle[N-1]));
		yy[N-1] -= 2*Math.sin(Math.toRadians(angle[N-1]));


		//change colour every rotation
		Color temp;
		if (angle[0]%360 == 0) {

			temp = dotColour;

			while (temp.equals(dotColour)) {
				dotColour = colours[(int)(Math.random()*colours.length)];
			}

		}

		if (angle[0] == 0) {
			for (int i = 0; i < N; i++) {
				angle[i] = 360 - (360/N *i);
				//System.out.println(angle[i]);
			}
		}

		panel.repaint();

	}





}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-11-03 18:37:02.284
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-11-03 18:37:02.284
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-11-03 18:37:02.293
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class MyLoadingIcon implements ActionListener {

	int N = 5;
	int diameter = 18;
	double rotationRadius = (diameter/2)*5.5;
	double angle[] = new double[N];
	double xx[] = new double[N];
	double yy[] = new double[N];



	JFrame window;
	DrawingPanel panel;
	int panW = 600;
	int panH = panW;

	Color colours[] = new Color []{
			Color.decode("#ff6161"), //new color
			Color.decode("#ffb359"), //new color
			Color.decode("#fbff6a"), //new color
			Color.decode("#8bff73"), //new color
			Color.decode("#4fefff"), //new color
			Color.decode("#5494ff"), //new color
			Color.decode("#7b66ff"), //new color
			Color.decode("#ff93ff"), //new color
	};

	Color dotColour;

	/*
	Ellipse2D rect1;
	Ellipse2D rect2;
	Ellipse2D rect3;
	Ellipse2D rect4;
	Ellipse2D rect5;
	 */


	public static void main (String[] args) {
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				new MyLoadingIcon();
			}
		});
	}



	public void generateStuff() {
		//calculate angles


		for (int i = 0; i < N; i++) {
			angle[i] = 360 - (360/N *i);
			//System.out.println(angle[i]);
		}
		System.out.println(" ");
		//calculate xx and yy
		for (int i = 0; i < N; i++) {
			xx[i] = panW/2 + rotationRadius*Math.sin(Math.toRadians(angle[i])) - (diameter/2); //-(diameter/2) centres the system of dots on the screen
			//System.out.println(xx[i]);

			yy[i] = panH/2 - rotationRadius*Math.cos(Math.toRadians(angle[i])) - (diameter/2);
			//System.out.println(yy[i]);
		}

		dotColour = colours[(int)(Math.random()*colours.length)];

		/*
		rect1 = new Ellipse2D.Double(xx[0],yy[0],20,20);
		rect2 = new Ellipse2D.Double(xx[1],yy[1],20,20);
		rect3 = new Ellipse2D.Double(xx[2],yy[2],20,20);
		rect4 = new Ellipse2D.Double(xx[3],yy[3],20,20);
		rect5 = new Ellipse2D.Double(xx[4],yy[4],20,20);
		 */

	}


	MyLoadingIcon() {

		window = new JFrame("Timer Move");
		panel = new DrawingPanel();
		window.add(panel);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setResizable(false);

		//rect[0].setFrame(xx[0],yy[0],diameter,diameter);

		generateStuff();

		//timer
		Timer timer = new Timer (8, this);
		timer.start();


		window.pack();
		window.setVisible(true);

	}

	class DrawingPanel extends JPanel {

		DrawingPanel() {
			this.setPreferredSize(new Dimension(panW,panH));
			this.setBackground(Color.decode("#2E2E2E"));
		}


		public void paintComponent(Graphics g) {
			super.paintComponent(g);

			Graphics2D g2 = (Graphics2D) g;

			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); 


			//draw lines
			
			g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {	


					g2.drawLine((int)xx[i] + (diameter/2), (int)yy[i] + (diameter/2), (int)xx[j] + (diameter/2), (int)yy[j] + (diameter/2));

				}
			}
			

			//darw dot outlines
			//g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i]-2, yy[i]-2, diameter+4, diameter+4));

				//g2.setColor(Color.white);

			}


			//draw dots
			g2.setColor(dotColour);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i], yy[i], diameter, diameter));
				//g2.setColor(Color.white);

			}

			if (true) {
				//System.out.println(angle[0]);

				/*
				 * g2.drawLine (dot0 x position, dot0 y position, dot2
				 */

				//g2.drawLine((int)xx[0], (int)yy[0], (int)xx[0]+50, (int)yy[0] + 50);

				//angle of line
				// Math.atan( yy[2] - yy[0]/ (xx[2] - xx[0])

				//System.out.println(Math.toDegrees(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))));

				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0] + (diameter/2), 
						(int)yy[0] + (diameter/2), 
						(int) (xx[0] + (100*Math.cos(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))), 
						(int) (yy[0] + (100*Math.sin(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))));
				
				
				g2.setStroke(new BasicStroke(1));
				g2.drawLine((int)xx[0] + (diameter/2), 
						(int)yy[0] + (diameter/2), 
						(int) (xx[0] + (100*-Math.cos(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))), 
						(int) (yy[0] + (100*-Math.sin(	(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	) + (diameter/2))));

				/*
				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0]+(diameter/2), (int)yy[0]+(diameter/2), (int)xx[2]+(diameter/2), (int)yy[2]+(diameter/2));
				 */
				
				if ((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))  < 270  (Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))) > 180) {
					System.out.println((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0]))))	);
				}
				
				

			}


			g2.setColor(Color.black);
			for (int i = 0; i < N; i++) {
				g2.drawString(""+(i+1), (int)xx[i]+7, (int)yy[i]+13);
			}


			//draw lasers

		}

	}


	@Override
	public void actionPerformed(ActionEvent e) {

		//increase angle
		for (int i = 0; i < N; i++) {
			angle[i]--;
		}

		//update dot positions

		//alternate function transformations
		for (int i = 0; i < N-1; i++) {


			if (i%2 == 0) {
				xx[i] -= 2*Math.cos(Math.toRadians(angle[i]));
				yy[i] -= Math.sin(Math.toRadians(angle[i]));
			}
			else {
				xx[i] -= Math.cos(Math.toRadians(angle[i]));
				yy[i] -= 2*Math.sin(Math.toRadians(angle[i]));
			}


		}

		//make last one normal (for cooler effect)
		xx[N-1] -= 2*Math.cos(Math.toRadians(angle[N-1]));
		yy[N-1] -= 2*Math.sin(Math.toRadians(angle[N-1]));


		//change colour every rotation
		Color temp;
		if (angle[0]%360 == 0) {

			temp = dotColour;

			while (temp.equals(dotColour)) {
				dotColour = colours[(int)(Math.random()*colours.length)];
			}

		}

		if (angle[0] == 0) {
			for (int i = 0; i < N; i++) {
				angle[i] = 360 - (360/N *i);
				//System.out.println(angle[i]);
			}
		}

		panel.repaint();

	}





}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-11-03 18:37:02.294
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-11-03 18:37:02.294
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-11-03 23:51:11.359
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class MyLoadingIcon implements ActionListener {

	int N = 5;
	int diameter = 18;
	double rotationRadius = (diameter/2)*5.5;
	double angle[] = new double[N];
	double xx[] = new double[N];
	double yy[] = new double[N];



	JFrame window;
	DrawingPanel panel;
	int panW = 600;
	int panH = panW;
	
	int laserLength = 10;
	double laserMovement = 0;

	Color colours[] = new Color []{
			Color.decode("#ff6161"), //new color
			Color.decode("#ffb359"), //new color
			Color.decode("#fbff6a"), //new color
			Color.decode("#8bff73"), //new color
			Color.decode("#4fefff"), //new color
			Color.decode("#5494ff"), //new color
			Color.decode("#7b66ff"), //new color
			Color.decode("#ff93ff"), //new color
	};

	Color dotColour;
	Timer timer;
	/*
	Ellipse2D rect1;
	Ellipse2D rect2;
	Ellipse2D rect3;
	Ellipse2D rect4;
	Ellipse2D rect5;
	 */


	public static void main (String[] args) {
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				new MyLoadingIcon();
			}
		});
	}



	public void generateStuff() {
		//calculate angles


		for (int i = 0; i < N; i++) {
			angle[i] = 360 - (360/N *i);
			//System.out.println(angle[i]);
		}
		System.out.println(" ");
		//calculate xx and yy
		for (int i = 0; i < N; i++) {
			xx[i] = panW/2 + rotationRadius*Math.sin(Math.toRadians(angle[i])) - (diameter/2); //-(diameter/2) centres the system of dots on the screen
			//System.out.println(xx[i]);

			yy[i] = panH/2 - rotationRadius*Math.cos(Math.toRadians(angle[i])) - (diameter/2);
			//System.out.println(yy[i]);
		}

		dotColour = colours[(int)(Math.random()*colours.length)];

		/*
		rect1 = new Ellipse2D.Double(xx[0],yy[0],20,20);
		rect2 = new Ellipse2D.Double(xx[1],yy[1],20,20);
		rect3 = new Ellipse2D.Double(xx[2],yy[2],20,20);
		rect4 = new Ellipse2D.Double(xx[3],yy[3],20,20);
		rect5 = new Ellipse2D.Double(xx[4],yy[4],20,20);
		 */

	}


	MyLoadingIcon() {

		window = new JFrame("Timer Move");
		panel = new DrawingPanel();
		window.add(panel);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setResizable(false);

		//rect[0].setFrame(xx[0],yy[0],diameter,diameter);

		generateStuff();

		//timer
		timer = new Timer (8, this);
		timer.start();


		window.pack();
		window.setVisible(true);

	}

	class DrawingPanel extends JPanel {

		DrawingPanel() {
			this.setPreferredSize(new Dimension(panW,panH));
			this.setBackground(Color.decode("#2E2E2E"));
		}


		public void paintComponent(Graphics g) {
			super.paintComponent(g);

			Graphics2D g2 = (Graphics2D) g;

			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); 





















			//draw lines

			g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {	


					g2.drawLine((int)xx[i] + (diameter/2), (int)yy[i] + (diameter/2), (int)xx[j] + (diameter/2), (int)yy[j] + (diameter/2));

				}
			}




			/*
			g2.setColor(dotColour);
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {	

					if (yy[j] - yy[i] < 0 && xx[j] - xx[i] > 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int) (xx[i] + (diameter/2)), 
								(int) (yy[i] + (diameter/2)), 
								(int) (xx[i] + (50*Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

					if (yy[j] - yy[i] > 0 && xx[j] - xx[i] < 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int)xx[i] + (diameter/2), 
								(int)yy[i] + (diameter/2), 
								(int) (xx[i] + (50*-Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*-Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

					if (yy[j] - yy[i] > 0 && xx[j] - xx[i] > 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int)xx[i] + (diameter/2), 
								(int)yy[i] + (diameter/2), 
								(int) (xx[i] + (50*Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

					if (yy[j] - yy[i] < 0 && xx[j] - xx[i] < 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int)xx[i] + (diameter/2), 
								(int)yy[i] + (diameter/2), 
								(int) (xx[i] + (50*-Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*-Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

				}
			}
			 */











			//darw dot outlines
			g2.setColor(Color.white);
			g2.setStroke(new BasicStroke(1));
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i]-2, yy[i]-2, diameter+4, diameter+4));

				//g2.setColor(Color.white);

			}


			//draw dots
			g2.setColor(dotColour);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i], yy[i], diameter, diameter));
				//g2.setColor(Color.white);

			}

			//System.out.println(angle[0]);

			/*
			 * g2.drawLine (dot0 x position, dot0 y position, dot2
			 */

			//g2.drawLine((int)xx[0], (int)yy[0], (int)xx[0]+50, (int)yy[0] + 50);

			//angle of line
			// Math.atan( yy[2] - yy[0]/ (xx[2] - xx[0])

			//System.out.println(Math.toDegrees(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))));






			/*
				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0]+(diameter/2), (int)yy[0]+(diameter/2), (int)xx[2]+(diameter/2), (int)yy[2]+(diameter/2));
			 */










			//REFERENCE CODE

			/**bottom left quadrant**/

/*

			if (yy[2] - yy[0] <= 0 && xx[2] - xx[0] >= 0) {


				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0]+ Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0]- Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));


			}
*/
			
			/**top right quadrant**/

			/*
			if (yy[2] - yy[0] >= 0 && xx[2] - xx[0] <= 0) {


				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0] - Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0] + Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));

				
				
			}
			*/

			/**top left quadrant**/

/*

			if (yy[2] - yy[0] >= 0 && xx[2] - xx[0] >= 0) {


				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0]+ Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0]+ Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));

			}

*/



			/**bottom right**/

			/*
			if (yy[2] - yy[0] <= 0 && xx[2] - xx[0] <= 0) {



				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0] - Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0]- Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));

			}
			*/

			
			
			
			
			
			
			
			
			
			
			//lasers!!
			
			if (angle[0]<= 167) { //so lasers dont launch at very beginning of loop
				
				for (int i = 0; i < N; i++) {
					/**bottom left quadrant**/
	
					for (int j = 0; j < N; j++) {
						
						
								if (yy[j] - yy[i] < 0 && xx[j] - xx[i] > 0) {
	
									if ((int)(xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ) == (int)xx[j]) {
										g2.drawLine((int) (xx[j]), 
												(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
									}
									else {
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
									}
								}
					
								
								/**top right quadrant**/
	
								
								if (yy[j] - yy[i] > 0 && xx[j] - xx[i] < 0) {
	
									if ( (int) (xx[i] - Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))) == (int)xx[j]) {
										g2.drawLine((int) (xx[j]), 
												(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
									}
									else {
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i] - Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i] + Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
									}
									
									
								}
								
	
								/**top left quadrant**/
	
	
					
								if (yy[j] - yy[i] > 0 && xx[j] - xx[i] > 0) {
	
								
									if ( (int) (xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))) == (int)xx[j]) {
										g2.drawLine((int) (xx[j]), 
												(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
									}
									else {
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i]+ Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
									}
								}
	
					
	
	
	
								/**bottom right**/
	
								
								if (yy[j] - yy[i] < 0 && xx[j] - xx[i] < 0) {
	
	
						
									(xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i] - Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[0])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
								}
								
					}
				}
			
			
			}
			
			
			




			//System.out.println(    (xx[2] - xx[1])/Math.cos(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))));

/*
			g2.setColor(Color.black);
			for (int i = 0; i < N; i++) {
				g2.drawString(""+(i+1), (int)xx[i]+7, (int)yy[i]+13);
			}
*/
		}

	}


	@Override
	public void actionPerformed(ActionEvent e) {

		//increase angle
		for (int i = 0; i < N; i++) {
			angle[i]--;
		}


		//update dot positions

		//alternate function transformations
		for (int i = 0; i < N-1; i++) {


			if (i%2 == 0) {
				xx[i] -= 2*Math.cos(Math.toRadians(angle[i]));
				yy[i] -= Math.sin(Math.toRadians(angle[i]));
			}
			else {
				xx[i] -= Math.cos(Math.toRadians(angle[i]));
				yy[i] -= 2*Math.sin(Math.toRadians(angle[i]));
			}


		}

		//make last one normal (for cooler effect)
		xx[N-1] -= 2*Math.cos(Math.toRadians(angle[N-1]));
		yy[N-1] -= 2*Math.sin(Math.toRadians(angle[N-1]));


		//change colour every rotation
		Color temp;
		if (angle[0]%360 == 0) {

			temp = dotColour;

			while (temp.equals(dotColour)) {
				dotColour = colours[(int)(Math.random()*colours.length)];
			}

		}

		if (angle[0] == 0) {
			for (int i = 0; i < N; i++) {
				angle[i] = 360 - (360/N *i);
				//System.out.println(angle[i]);
			}
		}
		
		
		laserMovement += 8;
		
		//make lasers fire multiple times
		if (angle[0]%167 == 0) {
			laserMovement = 0;
		}

		panel.repaint();

	}





}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-11-03 23:51:11.359
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-11-03 23:51:11.360
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-11-03 23:51:11.370
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class MyLoadingIcon implements ActionListener {

	int N = 5;
	int diameter = 18;
	double rotationRadius = (diameter/2)*5.5;
	double angle[] = new double[N];
	double xx[] = new double[N];
	double yy[] = new double[N];



	JFrame window;
	DrawingPanel panel;
	int panW = 600;
	int panH = panW;
	
	int laserLength = 10;
	double laserMovement = 0;

	Color colours[] = new Color []{
			Color.decode("#ff6161"), //new color
			Color.decode("#ffb359"), //new color
			Color.decode("#fbff6a"), //new color
			Color.decode("#8bff73"), //new color
			Color.decode("#4fefff"), //new color
			Color.decode("#5494ff"), //new color
			Color.decode("#7b66ff"), //new color
			Color.decode("#ff93ff"), //new color
	};

	Color dotColour;
	Timer timer;
	/*
	Ellipse2D rect1;
	Ellipse2D rect2;
	Ellipse2D rect3;
	Ellipse2D rect4;
	Ellipse2D rect5;
	 */


	public static void main (String[] args) {
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				new MyLoadingIcon();
			}
		});
	}



	public void generateStuff() {
		//calculate angles


		for (int i = 0; i < N; i++) {
			angle[i] = 360 - (360/N *i);
			//System.out.println(angle[i]);
		}
		System.out.println(" ");
		//calculate xx and yy
		for (int i = 0; i < N; i++) {
			xx[i] = panW/2 + rotationRadius*Math.sin(Math.toRadians(angle[i])) - (diameter/2); //-(diameter/2) centres the system of dots on the screen
			//System.out.println(xx[i]);

			yy[i] = panH/2 - rotationRadius*Math.cos(Math.toRadians(angle[i])) - (diameter/2);
			//System.out.println(yy[i]);
		}

		dotColour = colours[(int)(Math.random()*colours.length)];

		/*
		rect1 = new Ellipse2D.Double(xx[0],yy[0],20,20);
		rect2 = new Ellipse2D.Double(xx[1],yy[1],20,20);
		rect3 = new Ellipse2D.Double(xx[2],yy[2],20,20);
		rect4 = new Ellipse2D.Double(xx[3],yy[3],20,20);
		rect5 = new Ellipse2D.Double(xx[4],yy[4],20,20);
		 */

	}


	MyLoadingIcon() {

		window = new JFrame("Timer Move");
		panel = new DrawingPanel();
		window.add(panel);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setResizable(false);

		//rect[0].setFrame(xx[0],yy[0],diameter,diameter);

		generateStuff();

		//timer
		timer = new Timer (8, this);
		timer.start();


		window.pack();
		window.setVisible(true);

	}

	class DrawingPanel extends JPanel {

		DrawingPanel() {
			this.setPreferredSize(new Dimension(panW,panH));
			this.setBackground(Color.decode("#2E2E2E"));
		}


		public void paintComponent(Graphics g) {
			super.paintComponent(g);

			Graphics2D g2 = (Graphics2D) g;

			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); 





















			//draw lines

			g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {	


					g2.drawLine((int)xx[i] + (diameter/2), (int)yy[i] + (diameter/2), (int)xx[j] + (diameter/2), (int)yy[j] + (diameter/2));

				}
			}




			/*
			g2.setColor(dotColour);
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {	

					if (yy[j] - yy[i] < 0 && xx[j] - xx[i] > 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int) (xx[i] + (diameter/2)), 
								(int) (yy[i] + (diameter/2)), 
								(int) (xx[i] + (50*Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

					if (yy[j] - yy[i] > 0 && xx[j] - xx[i] < 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int)xx[i] + (diameter/2), 
								(int)yy[i] + (diameter/2), 
								(int) (xx[i] + (50*-Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*-Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

					if (yy[j] - yy[i] > 0 && xx[j] - xx[i] > 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int)xx[i] + (diameter/2), 
								(int)yy[i] + (diameter/2), 
								(int) (xx[i] + (50*Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

					if (yy[j] - yy[i] < 0 && xx[j] - xx[i] < 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int)xx[i] + (diameter/2), 
								(int)yy[i] + (diameter/2), 
								(int) (xx[i] + (50*-Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*-Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

				}
			}
			 */











			//darw dot outlines
			g2.setColor(Color.white);
			g2.setStroke(new BasicStroke(1));
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i]-2, yy[i]-2, diameter+4, diameter+4));

				//g2.setColor(Color.white);

			}


			//draw dots
			g2.setColor(dotColour);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i], yy[i], diameter, diameter));
				//g2.setColor(Color.white);

			}

			//System.out.println(angle[0]);

			/*
			 * g2.drawLine (dot0 x position, dot0 y position, dot2
			 */

			//g2.drawLine((int)xx[0], (int)yy[0], (int)xx[0]+50, (int)yy[0] + 50);

			//angle of line
			// Math.atan( yy[2] - yy[0]/ (xx[2] - xx[0])

			//System.out.println(Math.toDegrees(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))));






			/*
				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0]+(diameter/2), (int)yy[0]+(diameter/2), (int)xx[2]+(diameter/2), (int)yy[2]+(diameter/2));
			 */










			//REFERENCE CODE

			/**bottom left quadrant**/

/*

			if (yy[2] - yy[0] <= 0 && xx[2] - xx[0] >= 0) {


				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0]+ Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0]- Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));


			}
*/
			
			/**top right quadrant**/

			/*
			if (yy[2] - yy[0] >= 0 && xx[2] - xx[0] <= 0) {


				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0] - Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0] + Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));

				
				
			}
			*/

			/**top left quadrant**/

/*

			if (yy[2] - yy[0] >= 0 && xx[2] - xx[0] >= 0) {


				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0]+ Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0]+ Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));

			}

*/



			/**bottom right**/

			/*
			if (yy[2] - yy[0] <= 0 && xx[2] - xx[0] <= 0) {



				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0] - Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0]- Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));

			}
			*/

			
			
			
			
			
			
			
			
			
			
			//lasers!!
			
			if (angle[0]<= 167) { //so lasers dont launch at very beginning of loop
				
				for (int i = 0; i < N; i++) {
					/**bottom left quadrant**/
	
					for (int j = 0; j < N; j++) {
						
						
								if (yy[j] - yy[i] < 0 && xx[j] - xx[i] > 0) {
	
									if ((int)(xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ) == (int)xx[j]) {
										g2.drawLine((int) (xx[j]), 
												(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
									}
									else {
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
									}
								}
					
								
								/**top right quadrant**/
	
								
								if (yy[j] - yy[i] > 0 && xx[j] - xx[i] < 0) {
	
									if ( (int) (xx[i] - Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))) == (int)xx[j]) {
										g2.drawLine((int) (xx[j]), 
												(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
									}
									else {
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i] - Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i] + Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
									}
									
									
								}
								
	
								/**top left quadrant**/
	
	
					
								if (yy[j] - yy[i] > 0 && xx[j] - xx[i] > 0) {
	
								
									if ( (int) (xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))) == (int)xx[j]) {
										g2.drawLine((int) (xx[j]), 
												(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
									}
									else {
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i]+ Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
									}
								}
	
					
	
	
	
								/**bottom right**/
	
								
								if (yy[j] - yy[i] < 0 && xx[j] - xx[i] < 0) {
	
	
						
									(xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i] - Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[0])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
								}
								
					}
				}
			
			
			}
			
			
			




			//System.out.println(    (xx[2] - xx[1])/Math.cos(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))));

/*
			g2.setColor(Color.black);
			for (int i = 0; i < N; i++) {
				g2.drawString(""+(i+1), (int)xx[i]+7, (int)yy[i]+13);
			}
*/
		}

	}


	@Override
	public void actionPerformed(ActionEvent e) {

		//increase angle
		for (int i = 0; i < N; i++) {
			angle[i]--;
		}


		//update dot positions

		//alternate function transformations
		for (int i = 0; i < N-1; i++) {


			if (i%2 == 0) {
				xx[i] -= 2*Math.cos(Math.toRadians(angle[i]));
				yy[i] -= Math.sin(Math.toRadians(angle[i]));
			}
			else {
				xx[i] -= Math.cos(Math.toRadians(angle[i]));
				yy[i] -= 2*Math.sin(Math.toRadians(angle[i]));
			}


		}

		//make last one normal (for cooler effect)
		xx[N-1] -= 2*Math.cos(Math.toRadians(angle[N-1]));
		yy[N-1] -= 2*Math.sin(Math.toRadians(angle[N-1]));


		//change colour every rotation
		Color temp;
		if (angle[0]%360 == 0) {

			temp = dotColour;

			while (temp.equals(dotColour)) {
				dotColour = colours[(int)(Math.random()*colours.length)];
			}

		}

		if (angle[0] == 0) {
			for (int i = 0; i < N; i++) {
				angle[i] = 360 - (360/N *i);
				//System.out.println(angle[i]);
			}
		}
		
		
		laserMovement += 8;
		
		//make lasers fire multiple times
		if (angle[0]%167 == 0) {
			laserMovement = 0;
		}

		panel.repaint();

	}





}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-11-03 23:51:11.371
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-11-03 23:51:11.371
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-11-03 23:51:11.598
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class MyLoadingIcon implements ActionListener {

	int N = 5;
	int diameter = 18;
	double rotationRadius = (diameter/2)*5.5;
	double angle[] = new double[N];
	double xx[] = new double[N];
	double yy[] = new double[N];



	JFrame window;
	DrawingPanel panel;
	int panW = 600;
	int panH = panW;
	
	int laserLength = 10;
	double laserMovement = 0;

	Color colours[] = new Color []{
			Color.decode("#ff6161"), //new color
			Color.decode("#ffb359"), //new color
			Color.decode("#fbff6a"), //new color
			Color.decode("#8bff73"), //new color
			Color.decode("#4fefff"), //new color
			Color.decode("#5494ff"), //new color
			Color.decode("#7b66ff"), //new color
			Color.decode("#ff93ff"), //new color
	};

	Color dotColour;
	Timer timer;
	/*
	Ellipse2D rect1;
	Ellipse2D rect2;
	Ellipse2D rect3;
	Ellipse2D rect4;
	Ellipse2D rect5;
	 */


	public static void main (String[] args) {
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				new MyLoadingIcon();
			}
		});
	}



	public void generateStuff() {
		//calculate angles


		for (int i = 0; i < N; i++) {
			angle[i] = 360 - (360/N *i);
			//System.out.println(angle[i]);
		}
		System.out.println(" ");
		//calculate xx and yy
		for (int i = 0; i < N; i++) {
			xx[i] = panW/2 + rotationRadius*Math.sin(Math.toRadians(angle[i])) - (diameter/2); //-(diameter/2) centres the system of dots on the screen
			//System.out.println(xx[i]);

			yy[i] = panH/2 - rotationRadius*Math.cos(Math.toRadians(angle[i])) - (diameter/2);
			//System.out.println(yy[i]);
		}

		dotColour = colours[(int)(Math.random()*colours.length)];

		/*
		rect1 = new Ellipse2D.Double(xx[0],yy[0],20,20);
		rect2 = new Ellipse2D.Double(xx[1],yy[1],20,20);
		rect3 = new Ellipse2D.Double(xx[2],yy[2],20,20);
		rect4 = new Ellipse2D.Double(xx[3],yy[3],20,20);
		rect5 = new Ellipse2D.Double(xx[4],yy[4],20,20);
		 */

	}


	MyLoadingIcon() {

		window = new JFrame("Timer Move");
		panel = new DrawingPanel();
		window.add(panel);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setResizable(false);

		//rect[0].setFrame(xx[0],yy[0],diameter,diameter);

		generateStuff();

		//timer
		timer = new Timer (8, this);
		timer.start();


		window.pack();
		window.setVisible(true);

	}

	class DrawingPanel extends JPanel {

		DrawingPanel() {
			this.setPreferredSize(new Dimension(panW,panH));
			this.setBackground(Color.decode("#2E2E2E"));
		}


		public void paintComponent(Graphics g) {
			super.paintComponent(g);

			Graphics2D g2 = (Graphics2D) g;

			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); 





















			//draw lines

			g2.setColor(Color.white);
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {	


					g2.drawLine((int)xx[i] + (diameter/2), (int)yy[i] + (diameter/2), (int)xx[j] + (diameter/2), (int)yy[j] + (diameter/2));

				}
			}




			/*
			g2.setColor(dotColour);
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {	

					if (yy[j] - yy[i] < 0 && xx[j] - xx[i] > 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int) (xx[i] + (diameter/2)), 
								(int) (yy[i] + (diameter/2)), 
								(int) (xx[i] + (50*Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

					if (yy[j] - yy[i] > 0 && xx[j] - xx[i] < 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int)xx[i] + (diameter/2), 
								(int)yy[i] + (diameter/2), 
								(int) (xx[i] + (50*-Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*-Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

					if (yy[j] - yy[i] > 0 && xx[j] - xx[i] > 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int)xx[i] + (diameter/2), 
								(int)yy[i] + (diameter/2), 
								(int) (xx[i] + (50*Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

					if (yy[j] - yy[i] < 0 && xx[j] - xx[i] < 0) {
						//System.out.println(Math.toDegrees((Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))))	);
						g2.setStroke(new BasicStroke(4));
						g2.drawLine((int)xx[i] + (diameter/2), 
								(int)yy[i] + (diameter/2), 
								(int) (xx[i] + (50*-Math.cos(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))), 
								(int) (yy[i] + (50*-Math.sin(	(Math.atan( (yy[j] - yy[i]) / ((xx[j] - xx[i]))))	) + (diameter/2))));
					}

				}
			}
			 */











			//darw dot outlines
			g2.setColor(Color.white);
			g2.setStroke(new BasicStroke(1));
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i]-2, yy[i]-2, diameter+4, diameter+4));

				//g2.setColor(Color.white);

			}


			//draw dots
			g2.setColor(dotColour);
			for (int i = 0; i < N; i++) {

				g2.fill(new Ellipse2D.Double(xx[i], yy[i], diameter, diameter));
				//g2.setColor(Color.white);

			}

			//System.out.println(angle[0]);

			/*
			 * g2.drawLine (dot0 x position, dot0 y position, dot2
			 */

			//g2.drawLine((int)xx[0], (int)yy[0], (int)xx[0]+50, (int)yy[0] + 50);

			//angle of line
			// Math.atan( yy[2] - yy[0]/ (xx[2] - xx[0])

			//System.out.println(Math.toDegrees(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))));






			/*
				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int)xx[0]+(diameter/2), (int)yy[0]+(diameter/2), (int)xx[2]+(diameter/2), (int)yy[2]+(diameter/2));
			 */










			//REFERENCE CODE

			/**bottom left quadrant**/

/*

			if (yy[2] - yy[0] <= 0 && xx[2] - xx[0] >= 0) {


				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0]+ Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0]- Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));


			}
*/
			
			/**top right quadrant**/

			/*
			if (yy[2] - yy[0] >= 0 && xx[2] - xx[0] <= 0) {


				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0] - Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0] + Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));

				
				
			}
			*/

			/**top left quadrant**/

/*

			if (yy[2] - yy[0] >= 0 && xx[2] - xx[0] >= 0) {


				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0]+ Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0]+ Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));

			}

*/



			/**bottom right**/

			/*
			if (yy[2] - yy[0] <= 0 && xx[2] - xx[0] <= 0) {



				g2.setStroke(new BasicStroke(4));
				g2.drawLine((int) (xx[0] - Math.abs((50*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) ))) ), 
						(int) (yy[0]- Math.abs((50*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) (xx[0] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))), 
						(int) ((yy[0]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[2]-yy[0])/(xx[2]-xx[0]))) )))));

			}
			*/

			
			
			
			
			
			
			
			
			
			
			//lasers!!
			
			if (angle[0]<= 167) { //so lasers dont launch at very beginning of loop
				
				for (int i = 0; i < N; i++) {
					/**bottom left quadrant**/
	
					for (int j = 0; j < N; j++) {
						
						
								if (yy[j] - yy[i] < 0 && xx[j] - xx[i] > 0) {
	
									if ((int)(xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ) == (int)xx[j]) {
										g2.drawLine((int) (xx[j]), 
												(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
									}
									else {
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
									}
								}
					
								
								/**top right quadrant**/
	
								
								if (yy[j] - yy[i] > 0 && xx[j] - xx[i] < 0) {
	
									if ( (int) (xx[i] - Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))) == (int)xx[j]) {
										g2.drawLine((int) (xx[j]), 
												(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
									}
									else {
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i] - Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i] + Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
									}
									
									
								}
								
	
								/**top left quadrant**/
	
	
					
								if (yy[j] - yy[i] > 0 && xx[j] - xx[i] > 0) {
	
								
									if ( (int) (xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))) == (int)xx[j]) {
										g2.drawLine((int) (xx[j]), 
												(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
												(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
									}
									else {
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i]+ Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) + Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
									}
								}
	
					
	
	
	
								/**bottom right**/
	
								
								if (yy[j] - yy[i] < 0 && xx[j] - xx[i] < 0) {
	
	
						
									(xx[i]+ Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          + Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))
									g2.setStroke(new BasicStroke(4));
									g2.drawLine((int) (xx[i] - Math.abs((laserLength*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) ))) +(diameter/2)          - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[0])/(xx[j]-xx[i]))) ))) ), 
											(int) (yy[i]- Math.abs((laserLength*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))+(diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) (xx[i] + (diameter/2) - Math.abs((laserMovement*Math.cos((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))), 
											(int) ((yy[i]) + (diameter/2) - Math.abs((laserMovement*Math.sin((Math.atan((yy[j]-yy[i])/(xx[j]-xx[i]))) )))));
	
								}
								
					}
				}
			
			
			}
			
			
			




			//System.out.println(    (xx[2] - xx[1])/Math.cos(Math.atan( (yy[2] - yy[0]) / ((xx[2] - xx[0])))));

/*
			g2.setColor(Color.black);
			for (int i = 0; i < N; i++) {
				g2.drawString(""+(i+1), (int)xx[i]+7, (int)yy[i]+13);
			}
*/
		}

	}


	@Override
	public void actionPerformed(ActionEvent e) {

		//increase angle
		for (int i = 0; i < N; i++) {
			angle[i]--;
		}


		//update dot positions

		//alternate function transformations
		for (int i = 0; i < N-1; i++) {


			if (i%2 == 0) {
				xx[i] -= 2*Math.cos(Math.toRadians(angle[i]));
				yy[i] -= Math.sin(Math.toRadians(angle[i]));
			}
			else {
				xx[i] -= Math.cos(Math.toRadians(angle[i]));
				yy[i] -= 2*Math.sin(Math.toRadians(angle[i]));
			}


		}

		//make last one normal (for cooler effect)
		xx[N-1] -= 2*Math.cos(Math.toRadians(angle[N-1]));
		yy[N-1] -= 2*Math.sin(Math.toRadians(angle[N-1]));


		//change colour every rotation
		Color temp;
		if (angle[0]%360 == 0) {

			temp = dotColour;

			while (temp.equals(dotColour)) {
				dotColour = colours[(int)(Math.random()*colours.length)];
			}

		}

		if (angle[0] == 0) {
			for (int i = 0; i < N; i++) {
				angle[i] = 360 - (360/N *i);
				//System.out.println(angle[i]);
			}
		}
		
		
		laserMovement += 8;
		
		//make lasers fire multiple times
		if (angle[0]%167 == 0) {
			laserMovement = 0;
		}

		panel.repaint();

	}





}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-11-03 23:51:11.599
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-11-03 23:51:11.599
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2970)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2214)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2994)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2021-11-04 00:19:40.171 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-04 00:19:44.276
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-04 00:19:44.276
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-04 00:19:48.975
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-06 12:20:55.627 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-06 12:24:53.851
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-06 12:24:53.851
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-06 12:25:02.187
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-06 18:10:00.823 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-06 18:10:05.205
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-06 18:10:05.205
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-06 18:10:10.498
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-07 10:32:54.383 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-07 10:33:46.642
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-07 10:33:46.642
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-07 10:33:52.909
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-12 15:27:56.189 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-12 15:31:39.952
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-12 15:31:39.952
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-12 15:31:46.565
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-12 22:48:10.358 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-12 22:48:14.753
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-12 22:48:14.753
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2986427e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-12 22:48:19.530
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-13 17:31:52.539 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-13 17:32:05.775
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-13 17:32:05.775
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-13 17:32:12.210
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-15 18:44:35.421 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-15 18:44:47.922
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-15 18:44:47.922
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-15 18:44:54.615
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-15 21:59:45.772 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-15 22:00:12.788
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-15 22:00:12.788
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-15 22:00:17.687
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-16 12:17:45.671 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-16 12:17:51.061
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-16 12:17:51.061
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-16 12:17:57.657
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-17 15:44:53.240 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-17 15:45:09.027
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-17 15:45:09.027
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-17 15:45:15.731
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-18 15:51:29.577 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-18 15:51:45.856
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-18 15:51:45.856
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-18 15:51:51.977
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-18 21:05:23.601 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-18 21:05:27.552
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-18 21:05:27.552
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-18 21:05:32.320
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-19 18:21:33.219 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-19 18:21:48.488
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-19 18:21:48.488
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-19 18:21:55.499
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-19 22:36:42.495 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-19 22:36:47.228
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-19 22:36:47.229
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-19 22:36:52.253
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-20 00:46:48.965 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-20 00:47:01.782
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-20 00:47:01.782
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35cbeb54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-20 00:47:07.567
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-20 12:39:19.207 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-20 12:39:31.426
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-20 12:39:31.426
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-20 12:39:37.487
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-20 13:06:29.280 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-20 13:06:34.929
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-20 13:06:34.929
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-20 13:06:39.349
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-20 23:20:52.066 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-20 23:20:59.622
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-20 23:20:59.622
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-20 23:21:04.337
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-22 18:45:29.959 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-22 18:45:42.166
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-22 18:45:42.166
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-22 18:45:48.827
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-22 18:47:20.506 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-22 18:47:34.281
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-22 18:47:34.281
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-22 18:47:38.869
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-22 20:48:38.530 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-22 20:48:45.598
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-22 20:48:45.598
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@47d9c01,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5358c8fa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-22 20:48:50.119
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-22 21:45:04.378 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-22 21:45:09.048
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-22 21:45:09.048
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2986427e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-22 21:45:13.392
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-11-28 18:21:14.700 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-11-28 18:21:27.147
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-11-28 18:21:27.147
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2986427e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-11-28 18:21:33.336
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-12 18:21:25.868 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-12 18:21:39.003
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-12 18:21:39.003
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-12 18:21:45.199
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-13 16:10:07.542 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-13 16:10:20.980
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-13 16:10:20.980
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@335972a5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-13 16:10:27.351
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-13 18:59:14.256 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-13 18:59:19.413
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-13 18:59:19.413
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-13 18:59:23.709
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-13 19:53:48.227 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-13 19:53:52.666
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-13 19:53:52.666
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-13 19:53:57.653
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-14 16:51:53.519 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-14 16:53:14.013
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-14 16:53:14.013
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-14 16:53:20.233
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-15 15:50:15.485 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-15 15:50:28.164
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-15 15:50:28.164
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-15 15:50:34.374
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-15 19:53:09.062 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-15 19:53:15.506
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-15 19:53:15.506
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-15 19:53:19.976
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:00.137
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++)), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-15 21:35:00.138
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-15 21:35:00.139
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:00.158
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++)), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-15 21:35:00.159
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-15 21:35:00.160
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:00.526
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++)), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-15 21:35:00.527
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-15 21:35:00.527
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:01.650
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++;)), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-15 21:35:01.651
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-15 21:35:01.652
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:01.822
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++;)), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-15 21:35:01.822
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-15 21:35:01.822
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:02.986
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++;)), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-15 21:35:02.987
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-15 21:35:02.987
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2991)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:05.164
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++;) {}), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-12-15 21:35:05.164
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-12-15 21:35:05.164
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:494)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:05.320
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++;) {}), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-15 21:35:05.320
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-15 21:35:05.320
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:20.877
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++;) {}), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-15 21:35:20.877
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-15 21:35:20.878
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:23.123
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++;) {}), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-15 21:35:23.124
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-15 21:35:23.124
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-12-15 21:35:24.432
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 *
 * Widaad
 * 
 * Hermela
 * 
 * Henry
 * 
 * Josh
 *
 *
 * Date started: December 12, 2021
 */


package zombiegame;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Game {

	//global variables
	int panW = 800;
	int panH = 600;
	JFrame window;
	GamePanel panel;

	//instance variables
	Player player = new Player(20,20,panW/2-10,panH/2-10,0,0);
	ArrayList<Zombie> zombieList = new ArrayList<>();
	ArrayList<Bullet> bulletList = new ArrayList<>();
	boolean playerAlive = true;
	boolean leftMove = false;
	boolean rightMove = false;
	boolean upMove = false;
	boolean downMove = false;
	int mx;
	int my;
	int clickX;
	int clickY;
	int playerScore = 0;
	int round = 0;


	public static void main (String[] args) {

		new Game();

	}

	Game() {

		window = new JFrame("Martian Hunter");
		panel = new GamePanel();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.add(panel);

		spawnZombies();

		Thread gfxThread = new Thread() {

			public void run() {

				while(playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					panel.repaint();
				}
			}

		};

		Thread logicThread = new Thread() {

			public void run() {

				while (playerAlive) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					movePlayer();
					//moveZombies();
					shootBullets();
					spawnZombies();
					gameStatus();

				}
			}
		};


		gfxThread.start();
		logicThread.start();

		window.pack();
		window.setLocationRelativeTo(null);
		window.setVisible(true);

	}

	void spawnZombies() {

		if (zombieList.size() == 0) {
			round++;
			for (int i = 0; i < 2*(round) + 6; i++) {
	
				Zombie z = new Zombie (20,20,(int)(Math.random()*panW),(int)(Math.random()*panH),0,0);
	
				while (z.posX >= player.playerPosX - 20 && z.posX <= player.playerPosX + 20) {
					z.posX = (int)(Math.random()*panW);
				}
				while (z.posY >= player.playerPosY - 20 && z.posY <= player.playerPosY + 20) {
					z.posY = (int)(Math.random()*panH);
				}
	
				zombieList.add(z);
	
	
			}
		}


	}

	void movePlayer() {
		//		player.playerPosX += player.playerSpeedX;
		//		player.playerPosY += player.playerSpeedY;

		//TODO: make more efficient, maybe with separate panels?

		for (Zombie z : zombieList) {

			z.posX -= player.playerSpeedX;
			z.posY -= player.playerSpeedY;

		}

		for (Bullet b : bulletList) {

			b.posX -= player.playerSpeedX;
			b.posY -= player.playerSpeedY;

		}
	}

	void moveZombies() {


		for (Zombie z : zombieList) {

			z.angle = Math.atan2((z.posX - player.playerPosX), (z.posY - player.playerPosY));

			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posX > zombieList.get(i).posX - 30 && z.posX < zombieList.get(i).posX + 30) {

					z.speedX = 0;

				}
				else {
					z.speedX = -0.5*Math.sin(z.angle);
				}
			}


			for (int i = 0; i < zombieList.size(); i++) {
				if(zombieList.indexOf(z) != i && z.posY > zombieList.get(i).posY - 30 && z.posY < zombieList.get(i).posY + 30) {

					z.speedY = 0;

				}
				else {
					z.speedY = -0.5*Math.cos(z.angle);
				}
			}


			z.posX += z.speedX;
			z.posY += z.speedY;

		}


	}

	void shootBullets() {

		int j = 0;
		for (int k = 0; k < bulletList.size(); k++) {

			bulletList.get(k).posX += bulletList.get(k).speedX;
			bulletList.get(k).posY += bulletList.get(k).speedY;

			for (int i = 0; i < zombieList.size(); i++) {

				if (bulletList.get(k).posX >= zombieList.get(i).posX && bulletList.get(k).posX <= zombieList.get(i).posX + 20) {

					if (bulletList.get(k).posY >= zombieList.get(i).posY && bulletList.get(k).posY <= zombieList.get(i).posY + 20) {

						zombieList.remove(i);
						playerScore+=10;
						i--;
						//bulletList.remove(0);

					}

				}

			}

			j++;
		}


	}

	void gameStatus() {

		for (Zombie z : zombieList) {

			if (z.posX >= player.playerPosX-1 && z.posX <= player.playerPosX+player.playerWidth +1 && z.posY >= player.playerPosY-1 && z.posY <= player.playerPosY + player.playerHeight+1) {
				window.setTitle("Game over");
				playerAlive = false;
			}

		}


	}

	class GamePanel extends JPanel {

		GamePanel() {

			this.setBackground(Color.decode("#809B63"));
			this.setPreferredSize(new Dimension(panW,panH));

			this.addMouseListener(new MouseAL());
			this.addMouseMotionListener(new MouseMotionAL());
			this.addKeyListener(new WAL());
			this.setFocusable(true);
			this.requestFocusInWindow();

		}

		public void paintComponent(Graphics g) {

			super.paintComponent(g);
			Graphics2D g2 = (Graphics2D) g;
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,  RenderingHints.VALUE_ANTIALIAS_ON); //antialiasing

			//draw player
			g2.setColor(new Color(0,0,0,20));
			g2.fill(new Rectangle2D.Double(player.playerPosX+5,player.playerPosY+5,player.playerWidth,player.playerHeight)); //player shadow
			g2.setColor(Color.white);
			g2.fill(new Rectangle2D.Double(player.playerPosX,player.playerPosY,player.playerWidth,player.playerHeight)); //actual player

			//draw zombies
			g2.setColor(new Color(0,0,0,20));
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX+5, z.posY+5, z.width, z.height)); //zombie shadows
			}
			g2.setColor(Color.red);
			for (Zombie z : zombieList) {
				g2.fill(new Rectangle2D.Double(z.posX, z.posY, z.width, z.height)); //actual zombies
			}

			//draw bullets
			g2.setColor(new Color(0,0,0,20));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX+2, b.posY+2, b.width, b.height));
			}
			g2.setColor(Color.decode("#444444"));
			for (Bullet b : bulletList) {
				g2.fill(new Rectangle2D.Double(b.posX, b.posY, b.width, b.height));
			}

			//			g2.setColor(new Color(255,0,255,80));
			//			g2.drawLine((int)player.playerPosX + (player.playerWidth/2), (int)player.playerPosY + (player.playerHeight/2), mx,my);

			//score
			g2.setFont(new Font("Helvetica", Font.BOLD, 24));
			g2.setColor(Color.white);
			g2.drawString("Score: " + playerScore, panW-180, panH-30);
			g2.drawString("Round " + (for(int i = 0; i <= round; i++;) {}), 30, panH-30);



		}

	}







	class MouseAL implements MouseListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			// TODO Auto-generated method stub

			clickX = e.getX();
			clickY = e.getY();

			double deltaX = Math.abs((player.playerPosX + (player.playerWidth/2)-4)-mx);
			double deltaY = Math.abs((player.playerPosY + (player.playerHeight/2)-4)-my);
			double slope = deltaY/deltaX;
			double angle = Math.atan2(deltaY, deltaX);
			Bullet b = new Bullet(8,8,player.playerPosX + (player.playerWidth/2)-4,player.playerPosY + (player.playerHeight/2)-4,0,0);


			if (clickX > player.playerPosX) b.speedX = (double)(5*Math.cos(angle));
			if (clickX < player.playerPosX) b.speedX = (double)(-5*Math.cos(angle));
			if (clickY > player.playerPosY) b.speedY = (double)(5*Math.sin(angle));
			if (clickY < player.playerPosY) b.speedY = (double)(-5*Math.sin(angle));

			bulletList.add(b);			
		}

		@Override
		public void mousePressed(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseReleased(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseEntered(MouseEvent e) {
			// TODO Auto-generated method stub

		}

		@Override
		public void mouseExited(MouseEvent e) {

		}

	}



	class WAL implements KeyListener { 

		@Override
		public void keyPressed(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = true;
				player.playerSpeedY = -2;
			}
			if (key == 65) {
				leftMove = true;
				player.playerSpeedX = -2;
			}
			if (key == 83) {
				downMove = true;
				player.playerSpeedY = 2;
			}
			if (key == 68) {
				rightMove = true;
				player.playerSpeedX = 2;
			}
			if (rightMove && downMove && key!=65 && key!=87) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && downMove && key!=87 && key!=68) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = 2*Math.sin(Math.toRadians(45));
			}
			if (leftMove && upMove && key!=68 && key!=83) {
				player.playerSpeedX = -2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}
			if (rightMove && upMove && key!=83 && key!=65) {
				player.playerSpeedX = 2*Math.cos(Math.toRadians(45));
				player.playerSpeedY = -2*Math.sin(Math.toRadians(45));
			}


		}

		@Override
		public void keyReleased(KeyEvent e) {

			int key = e.getKeyCode();

			if (key == 87) {
				upMove = false;				
			}
			if (key == 65) {
				leftMove = false;
			}
			if (key == 83) {
				downMove = false;
			}
			if (key == 68) {
				rightMove = false;
			}

			if (!upMove && !downMove) {
				player.playerSpeedY = 0;
			}
			if (!leftMove && !rightMove) {
				player.playerSpeedX = 0;
			}



		}

		@Override
		public void keyTyped(KeyEvent e) {
			// TODO Auto-generated method stub

		}





	}

	class MouseMotionAL implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
		}

		@Override
		public void mouseMoved(MouseEvent e) {

			mx = e.getX();
			my = e.getY();

		}

	}

}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-12-15 21:35:24.433
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-12-15 21:35:24.433
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2031)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3795)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1943)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1974)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3347)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1524)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2021-12-16 22:58:32.109 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-16 22:58:45.326
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-16 22:58:45.326
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-16 22:58:51.608
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-16 23:28:53.833 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-16 23:29:00.665
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-16 23:29:00.665
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-16 23:29:06.582
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-17 01:26:20.079 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-17 01:26:30.681
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-17 01:26:30.681
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-17 01:26:35.697
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-17 20:30:56.928 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-17 20:31:10.620
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-17 20:31:10.620
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-17 20:31:16.982
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-18 20:23:33.990 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-18 20:23:46.544
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-18 20:23:46.544
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-18 20:23:52.622
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-19 00:21:46.522 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-19 00:21:51.344
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-19 00:21:51.344
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-19 00:21:56.602
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-19 16:07:42.097 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-19 16:08:01.895
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-19 16:08:01.895
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57bd9c2b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-19 16:08:08.765
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-19 19:13:53.198 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-19 19:13:57.416
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-19 19:13:57.416
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-19 19:14:01.834
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-21 20:13:34.871 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-21 20:13:47.718
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-21 20:13:47.718
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6d7e2795,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@78743dd8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-21 20:13:54.016
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-22 11:15:15.262 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product C:\Users\joshm\Downloads\Donutz_Cool_Code.jar
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product C:\Users\joshm\Downloads\Donutz_Cool_Code.jar

!ENTRY org.eclipse.jface 2 0 2021-12-22 11:15:29.281
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-22 11:15:29.281
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2986427e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-22 11:15:35.511
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-24 00:18:02.498 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-24 00:18:12.951
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-24 00:18:12.951
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-24 00:18:19.221
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-24 16:38:23.080 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-24 16:38:47.323
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-24 16:38:47.323
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-24 16:38:53.664
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-24 22:00:41.548 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-24 22:01:06.195
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-24 22:01:06.195
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-24 22:01:10.746
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-25 20:46:28.804 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-25 20:46:41.108
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-25 20:46:41.108
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@78743dd8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-25 20:46:47.237
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-26 06:54:02.674 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-26 06:54:07.969
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-26 06:54:07.969
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35cbeb54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-26 06:54:12.909
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-27 10:46:24.304 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-27 10:48:56.329
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-27 10:48:56.329
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35cbeb54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-27 10:49:02.903
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-28 14:20:33.155 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-28 14:20:47.599
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-28 14:20:47.599
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-28 14:20:54.309
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-28 16:47:45.301 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-28 16:47:58.733
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-28 16:47:58.733
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35cbeb54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-28 16:48:05.258
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-29 17:40:00.884 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-29 17:42:44.938
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-29 17:42:44.938
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-29 17:42:52.431
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-29 22:18:57.208 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-29 22:19:10.453
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-29 22:19:10.453
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35cbeb54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-29 22:19:16.710
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-31 16:42:42.365 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-31 16:42:55.687
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-31 16:42:55.687
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-31 16:43:02.286
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-12-31 19:17:51.252 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-12-31 19:18:02.779
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-12-31 19:18:02.779
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-12-31 19:18:07.444
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-02 21:39:03.735 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-02 21:39:16.944
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-02 21:39:16.944
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35cbeb54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-02 21:39:23.513
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-03 23:33:46.289 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-03 23:33:58.761
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-03 23:33:58.761
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-03 23:34:05.979
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-03 23:51:40.684 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-03 23:51:45.956
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-03 23:51:45.957
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@78743dd8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-03 23:51:50.614
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-05 18:31:30.655 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-05 18:32:21.192
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-05 18:32:21.192
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@335972a5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59a2bed1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-05 18:32:28.718
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-06 22:13:00.215 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-06 22:13:20.515
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-06 22:13:20.515
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-06 22:13:27.122
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-10 13:20:30.472 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-10 13:20:44.290
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-10 13:20:44.290
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3d4818e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26c6288d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-10 13:20:51.391
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-10 22:57:58.494 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-10 22:58:12.622
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-10 22:58:12.622
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@335972a5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59a2bed1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-10 22:58:19.228
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-11 10:27:00.392 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-11 10:27:05.009
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-11 10:27:05.009
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-11 10:27:10.469
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.ui 2 0 2022-01-11 10:28:46.416
!MESSAGE The 'org.eclipse.jdt.ui.JavaAllCompletionProposalComputer' proposal computer from the 'org.eclipse.jdt.ui' plug-in did not complete normally. The extension has thrown a runtime exception.
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.eclipse.jdt.internal.compiler.lookup.TypeBinding.needsUncheckedConversion(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)" because "argumentType" is null
	at org.eclipse.jdt.internal.compiler.ast.ASTNode.checkInvocationArgument(ASTNode.java:362)
	at org.eclipse.jdt.internal.compiler.ast.ASTNode.checkInvocationArguments(ASTNode.java:448)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:954)
	at org.eclipse.jdt.internal.compiler.ast.EqualExpression.resolveType(EqualExpression.java:864)
	at org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberAccess.resolveType(CompletionOnMemberAccess.java:61)
	at org.eclipse.jdt.internal.compiler.ast.Expression.resolveTypeExpecting(Expression.java:1147)
	at org.eclipse.jdt.internal.compiler.ast.IfStatement.resolveIfStatement(IfStatement.java:288)
	at org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:317)
	at org.eclipse.jdt.internal.compiler.ast.IfStatement.resolveIfStatement(IfStatement.java:291)
	at org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:317)
	at org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:131)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:661)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:362)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:570)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1512)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1637)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:667)
	at org.eclipse.jdt.internal.codeassist.CompletionEngine.complete(CompletionEngine.java:2287)
	at org.eclipse.jdt.internal.core.Openable.codeComplete(Openable.java:136)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:367)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeComplete(CompilationUnit.java:357)
	at org.eclipse.jdt.internal.ui.text.java.JavaCompletionProposalComputer.internalComputeCompletionProposals(JavaCompletionProposalComputer.java:256)
	at org.eclipse.jdt.internal.ui.text.java.JavaCompletionProposalComputer.computeCompletionProposals(JavaCompletionProposalComputer.java:218)
	at org.eclipse.jdt.internal.ui.text.java.JavaTypeCompletionProposalComputer.computeCompletionProposals(JavaTypeCompletionProposalComputer.java:65)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalComputerDescriptor.computeCompletionProposals(CompletionProposalComputerDescriptor.java:348)
	at org.eclipse.jdt.internal.ui.text.java.CompletionProposalCategory.computeCompletionProposals(CompletionProposalCategory.java:340)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor.collectProposals(ContentAssistProcessor.java:333)
	at org.eclipse.jdt.internal.ui.text.java.ContentAssistProcessor.computeCompletionProposals(ContentAssistProcessor.java:289)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$10(AsyncCompletionProposalPopup.java:352)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.text.contentassist.AsyncCompletionProposalPopup.lambda$9(AsyncCompletionProposalPopup.java:351)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1764)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1756)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:295)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
!SESSION 2022-01-11 16:43:12.562 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-11 16:43:25.950
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-11 16:43:25.950
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59a2bed1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49f2646,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-11 16:43:32.840
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-12 08:19:40.906 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-12 08:19:52.605
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-12 08:19:52.605
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-12 08:19:58.758
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.egit.ui 4 0 2022-01-12 10:14:13.172
!MESSAGE https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame/info/refs?service=git-upload-pack not found: Not Found
!STACK 0
org.eclipse.jgit.api.errors.TransportException: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame/info/refs?service=git-upload-pack not found: Not Found
	at org.eclipse.jgit.api.LsRemoteCommand.execute(LsRemoteCommand.java:189)
	at org.eclipse.jgit.api.LsRemoteCommand.call(LsRemoteCommand.java:128)
	at org.eclipse.egit.core.op.ListRemoteOperation.run(ListRemoteOperation.java:116)
	at org.eclipse.egit.ui.internal.clone.SourceBranchPage$9.run(SourceBranchPage.java:375)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Caused by: org.eclipse.jgit.errors.NoRemoteRepositoryException: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame/info/refs?service=git-upload-pack not found: Not Found
	at org.eclipse.jgit.transport.TransportHttp.createNotFoundException(TransportHttp.java:600)
	at org.eclipse.jgit.transport.TransportHttp.connect(TransportHttp.java:668)
	at org.eclipse.jgit.transport.TransportHttp.openFetch(TransportHttp.java:465)
	at org.eclipse.jgit.api.LsRemoteCommand.execute(LsRemoteCommand.java:167)
	... 4 more

!ENTRY org.eclipse.egit.ui 4 0 2022-01-12 10:14:41.778
!MESSAGE https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame/info/refs?service=git-upload-pack not found: Not Found
!STACK 0
org.eclipse.jgit.api.errors.TransportException: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame/info/refs?service=git-upload-pack not found: Not Found
	at org.eclipse.jgit.api.LsRemoteCommand.execute(LsRemoteCommand.java:189)
	at org.eclipse.jgit.api.LsRemoteCommand.call(LsRemoteCommand.java:128)
	at org.eclipse.egit.core.op.ListRemoteOperation.run(ListRemoteOperation.java:116)
	at org.eclipse.egit.ui.internal.clone.SourceBranchPage$9.run(SourceBranchPage.java:375)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Caused by: org.eclipse.jgit.errors.NoRemoteRepositoryException: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame/info/refs?service=git-upload-pack not found: Not Found
	at org.eclipse.jgit.transport.TransportHttp.createNotFoundException(TransportHttp.java:600)
	at org.eclipse.jgit.transport.TransportHttp.connect(TransportHttp.java:668)
	at org.eclipse.jgit.transport.TransportHttp.openFetch(TransportHttp.java:465)
	at org.eclipse.jgit.api.LsRemoteCommand.execute(LsRemoteCommand.java:167)
	... 4 more

!ENTRY org.eclipse.egit.ui 4 0 2022-01-12 10:14:51.403
!MESSAGE https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame.git: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame.git/info/refs?service=git-upload-pack not found: Not Found
!STACK 0
org.eclipse.jgit.api.errors.TransportException: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame.git: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame.git/info/refs?service=git-upload-pack not found: Not Found
	at org.eclipse.jgit.api.LsRemoteCommand.execute(LsRemoteCommand.java:189)
	at org.eclipse.jgit.api.LsRemoteCommand.call(LsRemoteCommand.java:128)
	at org.eclipse.egit.core.op.ListRemoteOperation.run(ListRemoteOperation.java:116)
	at org.eclipse.egit.ui.internal.clone.SourceBranchPage$9.run(SourceBranchPage.java:375)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Caused by: org.eclipse.jgit.errors.NoRemoteRepositoryException: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame.git: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame.git/info/refs?service=git-upload-pack not found: Not Found
	at org.eclipse.jgit.transport.TransportHttp.createNotFoundException(TransportHttp.java:600)
	at org.eclipse.jgit.transport.TransportHttp.connect(TransportHttp.java:668)
	at org.eclipse.jgit.transport.TransportHttp.openFetch(TransportHttp.java:465)
	at org.eclipse.jgit.api.LsRemoteCommand.execute(LsRemoteCommand.java:167)
	... 4 more
!SESSION 2022-01-13 09:16:27.380 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-13 09:16:40.820
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-13 09:16:40.820
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@11170228,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@46ee7013,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-13 09:16:48.437
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.debug 4 125 2022-01-13 09:57:40.999
!MESSAGE Internal error logged from JDI Debug: 
!STACK 1
org.eclipse.debug.core.DebugException: Invalid stack frame
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:1354)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingThisObject(JDIStackFrame.java:1006)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getThis(JDIStackFrame.java:1425)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.evaluateField(JavaDebugHover.java:523)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:383)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SUBENTRY 1 org.eclipse.jdt.debug 4 130 2022-01-13 09:57:41.000
!MESSAGE Invalid stack frame

!ENTRY org.eclipse.jdt.debug 4 125 2022-01-13 09:57:47.750
!MESSAGE Internal error logged from JDI Debug: 
!STACK 1
org.eclipse.debug.core.DebugException: Invalid stack frame
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:1354)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingThisObject(JDIStackFrame.java:1006)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getThis(JDIStackFrame.java:1425)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.evaluateField(JavaDebugHover.java:523)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:383)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SUBENTRY 1 org.eclipse.jdt.debug 4 130 2022-01-13 09:57:47.750
!MESSAGE Invalid stack frame

!ENTRY org.eclipse.jdt.debug 4 125 2022-01-13 09:59:28.581
!MESSAGE Internal error logged from JDI Debug: 
!STACK 1
org.eclipse.debug.core.DebugException: Invalid stack frame
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:1354)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingThisObject(JDIStackFrame.java:1006)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getThis(JDIStackFrame.java:1425)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.evaluateField(JavaDebugHover.java:523)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:383)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SUBENTRY 1 org.eclipse.jdt.debug 4 130 2022-01-13 09:59:28.581
!MESSAGE Invalid stack frame
!SESSION 2022-01-13 17:27:02.815 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-13 17:27:06.981
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-13 17:27:06.981
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49925d21,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@11170228,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-13 17:27:11.829
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.egit.ui 4 0 2022-01-13 17:30:15.491
!MESSAGE https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame/info/refs?service=git-upload-pack not found: Not Found
!STACK 0
org.eclipse.jgit.api.errors.TransportException: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame/info/refs?service=git-upload-pack not found: Not Found
	at org.eclipse.jgit.api.LsRemoteCommand.execute(LsRemoteCommand.java:189)
	at org.eclipse.jgit.api.LsRemoteCommand.call(LsRemoteCommand.java:128)
	at org.eclipse.egit.core.op.ListRemoteOperation.run(ListRemoteOperation.java:116)
	at org.eclipse.egit.ui.internal.clone.SourceBranchPage$9.run(SourceBranchPage.java:375)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Caused by: org.eclipse.jgit.errors.NoRemoteRepositoryException: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame: https://github.com/Java-prog-class-2021/Game4/tree/master/src/zombiegame/info/refs?service=git-upload-pack not found: Not Found
	at org.eclipse.jgit.transport.TransportHttp.createNotFoundException(TransportHttp.java:600)
	at org.eclipse.jgit.transport.TransportHttp.connect(TransportHttp.java:668)
	at org.eclipse.jgit.transport.TransportHttp.openFetch(TransportHttp.java:465)
	at org.eclipse.jgit.api.LsRemoteCommand.execute(LsRemoteCommand.java:167)
	... 4 more
!SESSION 2022-01-14 19:30:07.717 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-14 19:30:20.266
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-14 19:30:20.266
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644b68ad,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-14 19:30:26.791
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-17 23:06:59.593 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-17 23:07:15.697
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-17 23:07:15.697
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d88a54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c1bebca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-17 23:07:23.247
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-18 14:46:47.121 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-18 14:48:01.711
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-18 14:48:01.711
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-18 14:48:08.605
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-19 20:39:53.824 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-19 20:41:52.305
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-19 20:41:52.305
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@335972a5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-19 20:41:59.451
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-20 16:12:20.980 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-20 16:12:35.894
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-20 16:12:35.894
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-20 16:12:43.322
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.egit.core 4 0 2022-01-20 16:29:08.267
!MESSAGE Pulling 1 repository
!SUBENTRY 1 org.eclipse.egit.core 4 0 2022-01-20 16:29:08.267
!MESSAGE Checkout conflict with files: 
src/zombiegame/Game.java
!STACK 0
org.eclipse.jgit.api.errors.CheckoutConflictException: Checkout conflict with files: 
src/zombiegame/Game.java
	at org.eclipse.jgit.api.MergeCommand.call(MergeCommand.java:419)
	at org.eclipse.jgit.api.PullCommand.call(PullCommand.java:374)
	at org.eclipse.egit.core.op.PullOperation$PullJob.run(PullOperation.java:256)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.jgit.errors.CheckoutConflictException: Checkout conflict with files: 
src/zombiegame/Game.java
	at org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(DirCacheCheckout.java:502)
	at org.eclipse.jgit.dircache.DirCacheCheckout.checkout(DirCacheCheckout.java:467)
	at org.eclipse.jgit.api.MergeCommand.call(MergeCommand.java:288)
	... 3 more

!ENTRY org.eclipse.egit.core 4 0 2022-01-20 16:29:43.990
!MESSAGE Pulling 1 repository
!SUBENTRY 1 org.eclipse.egit.core 4 0 2022-01-20 16:29:43.990
!MESSAGE Checkout conflict with files: 
src/zombiegame/Game.java
!STACK 0
org.eclipse.jgit.api.errors.CheckoutConflictException: Checkout conflict with files: 
src/zombiegame/Game.java
	at org.eclipse.jgit.api.MergeCommand.call(MergeCommand.java:419)
	at org.eclipse.jgit.api.PullCommand.call(PullCommand.java:374)
	at org.eclipse.egit.core.op.PullOperation$PullJob.run(PullOperation.java:256)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.jgit.errors.CheckoutConflictException: Checkout conflict with files: 
src/zombiegame/Game.java
	at org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(DirCacheCheckout.java:502)
	at org.eclipse.jgit.dircache.DirCacheCheckout.checkout(DirCacheCheckout.java:467)
	at org.eclipse.jgit.api.MergeCommand.call(MergeCommand.java:288)
	... 3 more

!ENTRY org.eclipse.egit.core 4 0 2022-01-20 16:34:05.143
!MESSAGE Pulling 1 repository
!SUBENTRY 1 org.eclipse.egit.core 4 0 2022-01-20 16:34:05.143
!MESSAGE Checkout conflict with files: 
src/zombiegame/Game.java
!STACK 0
org.eclipse.jgit.api.errors.CheckoutConflictException: Checkout conflict with files: 
src/zombiegame/Game.java
	at org.eclipse.jgit.api.MergeCommand.call(MergeCommand.java:419)
	at org.eclipse.jgit.api.PullCommand.call(PullCommand.java:374)
	at org.eclipse.egit.core.op.PullOperation$PullJob.run(PullOperation.java:256)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.jgit.errors.CheckoutConflictException: Checkout conflict with files: 
src/zombiegame/Game.java
	at org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(DirCacheCheckout.java:502)
	at org.eclipse.jgit.dircache.DirCacheCheckout.checkout(DirCacheCheckout.java:467)
	at org.eclipse.jgit.api.MergeCommand.call(MergeCommand.java:288)
	... 3 more
!SESSION 2022-01-22 00:24:49.700 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-22 00:25:00.162
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-22 00:25:00.162
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-22 00:25:07.767
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-22 15:00:37.069 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-22 15:00:50.649
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-22 15:00:50.649
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@78743dd8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@752494dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-22 15:00:57.813
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-22 15:13:49.199 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-22 15:13:53.714
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-22 15:13:53.714
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-22 15:13:58.805
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-22 17:19:03.023 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-22 17:19:15.065
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-22 17:19:15.065
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49f2646,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4b00d59,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-22 17:19:20.275
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-22 18:10:23.718 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-22 18:10:28.117
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-22 18:10:28.117
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-22 18:10:33.155
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-22 20:09:43.902 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-22 20:10:04.785
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-22 20:10:04.785
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-22 20:10:10.247
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-22 21:26:51.651 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-22 21:26:56.196
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-22 21:26:56.196
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-22 21:27:01.220
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-22 21:53:53.679 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-22 21:53:57.751
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-22 21:53:57.751
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59a2bed1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49f2646,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-22 21:54:02.880
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.egit.core 4 0 2022-01-22 21:55:30.841
!MESSAGE Pulling 1 repository
!SUBENTRY 1 org.eclipse.egit.core 4 0 2022-01-22 21:55:30.842
!MESSAGE Checkout conflict with files: 
src/zombiegame/Border.java
src/zombiegame/Game.java
src/zombiegame/Player.java
src/zombiegame/Zombie.java
!STACK 0
org.eclipse.jgit.api.errors.CheckoutConflictException: Checkout conflict with files: 
src/zombiegame/Border.java
src/zombiegame/Game.java
src/zombiegame/Player.java
src/zombiegame/Zombie.java
	at org.eclipse.jgit.api.MergeCommand.call(MergeCommand.java:419)
	at org.eclipse.jgit.api.PullCommand.call(PullCommand.java:374)
	at org.eclipse.egit.core.op.PullOperation$PullJob.run(PullOperation.java:256)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.jgit.errors.CheckoutConflictException: Checkout conflict with files: 
src/zombiegame/Border.java
src/zombiegame/Game.java
src/zombiegame/Player.java
src/zombiegame/Zombie.java
	at org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(DirCacheCheckout.java:502)
	at org.eclipse.jgit.dircache.DirCacheCheckout.checkout(DirCacheCheckout.java:467)
	at org.eclipse.jgit.api.MergeCommand.call(MergeCommand.java:288)
	... 3 more

!ENTRY org.eclipse.egit.core 4 0 2022-01-22 21:55:58.670
!MESSAGE Pulling 1 repository
!SUBENTRY 1 org.eclipse.egit.core 4 0 2022-01-22 21:55:58.670
!MESSAGE Checkout conflict with files: 
src/zombiegame/Border.java
src/zombiegame/Game.java
src/zombiegame/Player.java
src/zombiegame/Zombie.java
!STACK 0
org.eclipse.jgit.api.errors.CheckoutConflictException: Checkout conflict with files: 
src/zombiegame/Border.java
src/zombiegame/Game.java
src/zombiegame/Player.java
src/zombiegame/Zombie.java
	at org.eclipse.jgit.api.MergeCommand.call(MergeCommand.java:419)
	at org.eclipse.jgit.api.PullCommand.call(PullCommand.java:374)
	at org.eclipse.egit.core.op.PullOperation$PullJob.run(PullOperation.java:256)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: org.eclipse.jgit.errors.CheckoutConflictException: Checkout conflict with files: 
src/zombiegame/Border.java
src/zombiegame/Game.java
src/zombiegame/Player.java
src/zombiegame/Zombie.java
	at org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(DirCacheCheckout.java:502)
	at org.eclipse.jgit.dircache.DirCacheCheckout.checkout(DirCacheCheckout.java:467)
	at org.eclipse.jgit.api.MergeCommand.call(MergeCommand.java:288)
	... 3 more
!SESSION 2022-01-22 22:15:15.698 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-22 22:15:23.509
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-22 22:15:23.509
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c048b30,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@309cf657,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-22 22:15:28.557
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-23 00:38:36.238 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-23 00:38:50.082
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-23 00:38:50.082
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59a2bed1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49f2646,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-23 00:38:58.103
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-23 01:32:26.812 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-23 01:32:39.935
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-23 01:32:39.935
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1939a394,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-23 01:32:46.988
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-23 13:15:38.577 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-23 13:15:54.154
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-23 13:15:54.154
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49925d21,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@11170228,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-23 13:16:01.442
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-23 22:49:41.694 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-23 22:49:54.503
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-23 22:49:54.503
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c048b30,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@309cf657,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-23 22:49:59.789
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-23 23:01:09.720 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-23 23:01:15.045
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-23 23:01:15.045
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4b00d59,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c048b30,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-23 23:01:20.062
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.ui 4 10001 2022-01-23 23:02:56.484
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Core Exception [code 4] Problems encountered while moving resources.
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:52)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor$1.perform(JavaMoveProcessor.java:187)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:224)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:106)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:108)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:187)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:151)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:73)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:268)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.performDrop(SelectionTransferDropAdapter.java:205)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:252)
	at org.eclipse.jface.util.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:227)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.util.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:224)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:94)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:467)
	at org.eclipse.swt.dnd.DropTarget.Drop_64(DropTarget.java:401)
	at org.eclipse.swt.dnd.DropTarget$1.method6(DropTarget.java:265)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:120)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:541)
	at org.eclipse.swt.dnd.DragSource.lambda$0(DragSource.java:380)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
Contains: File already exists on disk: C:\Users\joshm\git\Game4\src\zombiegame\texturetile4.jpg.
Caused by: org.eclipse.core.internal.resources.ResourceException: Problems encountered while moving resources.
	at org.eclipse.core.internal.resources.Resource.move(Resource.java:1515)
	at org.eclipse.ltk.core.refactoring.resource.MoveResourceChange.perform(MoveResourceChange.java:118)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor$1.perform(JavaMoveProcessor.java:187)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:224)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:106)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:108)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:187)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:151)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:73)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:268)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.performDrop(SelectionTransferDropAdapter.java:205)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:252)
	at org.eclipse.jface.util.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:227)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.util.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:224)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:94)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:467)
	at org.eclipse.swt.dnd.DropTarget.Drop_64(DropTarget.java:401)
	at org.eclipse.swt.dnd.DropTarget$1.method6(DropTarget.java:265)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:120)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:541)
	at org.eclipse.swt.dnd.DragSource.lambda$0(DragSource.java:380)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
Contains: File already exists on disk: C:\Users\joshm\git\Game4\src\zombiegame\texturetile4.jpg.
!SUBENTRY 1 org.eclipse.core.resources 4 4 2022-01-23 23:02:56.486
!MESSAGE Problems encountered while moving resources.
!SUBENTRY 2 org.eclipse.core.filesystem 4 268 2022-01-23 23:02:56.486
!MESSAGE File already exists on disk: C:\Users\joshm\git\Game4\src\zombiegame\texturetile4.jpg.

!ENTRY org.eclipse.jdt.ui 4 10001 2022-01-23 23:18:41.860
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Core Exception [code 4] Problems encountered while moving resources.
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:52)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor$1.perform(JavaMoveProcessor.java:187)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:224)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:106)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:108)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:187)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:151)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:73)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:268)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.performDrop(SelectionTransferDropAdapter.java:205)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:252)
	at org.eclipse.jface.util.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:227)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.util.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:224)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:94)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:467)
	at org.eclipse.swt.dnd.DropTarget.Drop_64(DropTarget.java:401)
	at org.eclipse.swt.dnd.DropTarget$1.method6(DropTarget.java:265)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:120)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:541)
	at org.eclipse.swt.dnd.DragSource.lambda$0(DragSource.java:380)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
Contains: File already exists on disk: C:\Users\joshm\git\Game4\src\zombiegame\heart.png.
Caused by: org.eclipse.core.internal.resources.ResourceException: Problems encountered while moving resources.
	at org.eclipse.core.internal.resources.Resource.move(Resource.java:1515)
	at org.eclipse.ltk.core.refactoring.resource.MoveResourceChange.perform(MoveResourceChange.java:118)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor$1.perform(JavaMoveProcessor.java:187)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:224)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:106)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:108)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:187)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:151)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:73)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:268)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.performDrop(SelectionTransferDropAdapter.java:205)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:252)
	at org.eclipse.jface.util.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:227)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.util.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:224)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:94)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:467)
	at org.eclipse.swt.dnd.DropTarget.Drop_64(DropTarget.java:401)
	at org.eclipse.swt.dnd.DropTarget$1.method6(DropTarget.java:265)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:120)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:541)
	at org.eclipse.swt.dnd.DragSource.lambda$0(DragSource.java:380)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
Contains: File already exists on disk: C:\Users\joshm\git\Game4\src\zombiegame\heart.png.
!SUBENTRY 1 org.eclipse.core.resources 4 4 2022-01-23 23:18:41.861
!MESSAGE Problems encountered while moving resources.
!SUBENTRY 2 org.eclipse.core.filesystem 4 268 2022-01-23 23:18:41.861
!MESSAGE File already exists on disk: C:\Users\joshm\git\Game4\src\zombiegame\heart.png.
!SESSION 2022-01-24 15:44:29.413 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-24 15:44:43.334
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-24 15:44:43.334
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@335972a5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-24 15:44:50.844
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-24 17:34:45.743 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-24 17:34:50.044
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-24 17:34:50.044
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c048b30,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@309cf657,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-24 17:34:54.878
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-24 17:39:14.786 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-24 17:39:18.933
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-24 17:39:18.933
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e2c627e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35cbeb54,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-24 17:39:23.532
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-25 17:52:03.133 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-25 17:52:30.731
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-25 17:52:30.731
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@335972a5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59a2bed1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-25 17:52:38.219
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-25 17:53:42.412 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-25 17:53:48.002
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-25 17:53:48.002
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a7ae340,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e8bd498,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-25 17:53:52.798
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.ui 4 10001 2022-01-25 18:01:19.473
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Core Exception [code 4] Problems encountered while moving resources.
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:52)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor$1.perform(JavaMoveProcessor.java:187)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:224)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:106)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:108)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:187)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:151)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:73)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:268)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.performDrop(SelectionTransferDropAdapter.java:205)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:252)
	at org.eclipse.jface.util.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:227)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.util.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:224)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:94)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:467)
	at org.eclipse.swt.dnd.DropTarget.Drop_64(DropTarget.java:401)
	at org.eclipse.swt.dnd.DropTarget$1.method6(DropTarget.java:265)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:120)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:541)
	at org.eclipse.swt.dnd.DragSource.lambda$0(DragSource.java:380)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
Contains: File already exists on disk: C:\Users\joshm\git\Game4\src\zombiegame\pisotalposeOG_center.png.
Caused by: org.eclipse.core.internal.resources.ResourceException: Problems encountered while moving resources.
	at org.eclipse.core.internal.resources.Resource.move(Resource.java:1515)
	at org.eclipse.ltk.core.refactoring.resource.MoveResourceChange.perform(MoveResourceChange.java:118)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor$1.perform(JavaMoveProcessor.java:187)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:224)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:106)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5907)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:108)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:436)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:187)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:151)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:73)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:268)
	at org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.performDrop(SelectionTransferDropAdapter.java:205)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:252)
	at org.eclipse.jface.util.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:227)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.util.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:224)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:94)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1067)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:766)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:467)
	at org.eclipse.swt.dnd.DropTarget.Drop_64(DropTarget.java:401)
	at org.eclipse.swt.dnd.DropTarget$1.method6(DropTarget.java:265)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:120)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:541)
	at org.eclipse.swt.dnd.DragSource.lambda$0(DragSource.java:380)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4209)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1043)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4026)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:654)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1462)
Contains: File already exists on disk: C:\Users\joshm\git\Game4\src\zombiegame\pisotalposeOG_center.png.
!SUBENTRY 1 org.eclipse.core.resources 4 4 2022-01-25 18:01:19.474
!MESSAGE Problems encountered while moving resources.
!SUBENTRY 2 org.eclipse.core.filesystem 4 268 2022-01-25 18:01:19.475
!MESSAGE File already exists on disk: C:\Users\joshm\git\Game4\src\zombiegame\pisotalposeOG_center.png.
!SESSION 2022-01-25 19:56:39.134 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-25 19:56:46.822
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-25 19:56:46.822
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c048b30,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@309cf657,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-25 19:56:52.117
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-25 20:23:58.614 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-25 20:24:03.198
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-25 20:24:03.198
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@335972a5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59a2bed1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-25 20:24:08.265
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-26 21:27:40.515 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-26 21:28:03.247
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-26 21:28:03.247
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c048b30,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@309cf657,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-26 21:28:10.356
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-27 12:43:07.135 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-27 12:43:27.443
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-27 12:43:27.443
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@58583a2d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3e8afc2d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-27 12:43:31.438
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-03 15:59:12.837 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-03 15:59:29.366
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-03 15:59:29.366
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59a2bed1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49f2646,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-03 15:59:36.215
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-03 22:11:21.358 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-03 22:12:15.016
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-03 22:12:15.016
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c048b30,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@309cf657,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-03 22:12:20.492
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-04 22:59:05.595 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-04 22:59:19.848
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-04 22:59:19.848
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@309cf657,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4d4c4b14,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-04 22:59:27.005
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-14 23:50:21.715 -----------------------------------------------
eclipse.buildId=4.20.0.I20210611-1600
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-14 23:50:35.962
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-14 23:50:35.962
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@49925d21,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@11170228,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-14 23:50:43.038
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\joshm'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
